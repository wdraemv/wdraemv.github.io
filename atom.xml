<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>风不及你甜</title>
  
  <subtitle>迷迷糊糊才是真</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-06-10T08:47:54.987Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>wdraemv</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BUU-刮开有奖</title>
    <link href="http://example.com/2021/06/10/BUU-%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/"/>
    <id>http://example.com/2021/06/10/BUU-%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/</id>
    <published>2021-06-10T08:00:56.000Z</published>
    <updated>2021-06-10T08:47:54.987Z</updated>
    
    <content type="html"><![CDATA[<h1 id="刮开有奖"><a href="#刮开有奖" class="headerlink" title="刮开有奖"></a>刮开有奖</h1><p><img src="/2021/06/10/BUU-%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/%E6%8D%95%E8%8E%B7.PNG" alt="捕获"></p><p>查壳发现是一个32位无壳</p><p>进入WINMain主函数<img src="/2021/06/10/BUU-%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/1.PNG" alt="1"></p><p>关键点在于DialogFunc函数里面，进去查看</p><p><img src="/2021/06/10/BUU-%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/2.PNG" alt="2"></p><p>看一遍下来通过代码<strong>GetDlgItemTextA(hDlg, 1000, &amp;String, 0xFFFF);</strong><br>知道了String是我们输入的flag。通过代码**if ( strlen(&amp;String) == 8 )**，我们知道flag的长度应该是8。再从上往下慢慢分析，先给V7-V17赋值，进入函数sub_4010F0</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">sub_4010F0</span><span class="params">(<span class="keyword">int</span> a1, <span class="keyword">int</span> a2, <span class="keyword">int</span> a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// ecx</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// edx</span></span><br><span class="line"></span><br><span class="line">  result = a3;</span><br><span class="line">  <span class="keyword">for</span> ( i = a2; i &lt;= a3; a2 = i )</span><br><span class="line">  &#123;</span><br><span class="line">    v5 = <span class="number">4</span> * i;</span><br><span class="line">    v6 = *(_DWORD *)(<span class="number">4</span> * i + a1);</span><br><span class="line">    <span class="keyword">if</span> ( a2 &lt; result &amp;&amp; i &lt; result )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">do</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( v6 &gt; *(_DWORD *)(a1 + <span class="number">4</span> * result) )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ( i &gt;= result )</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          ++i;</span><br><span class="line">          *(_DWORD *)(v5 + a1) = *(_DWORD *)(a1 + <span class="number">4</span> * result);</span><br><span class="line">          <span class="keyword">if</span> ( i &gt;= result )</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">while</span> ( *(_DWORD *)(a1 + <span class="number">4</span> * i) &lt;= v6 )</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">if</span> ( ++i &gt;= result )</span><br><span class="line">              <span class="keyword">goto</span> LABEL_13;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> ( i &gt;= result )</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          v5 = <span class="number">4</span> * i;</span><br><span class="line">          *(_DWORD *)(a1 + <span class="number">4</span> * result) = *(_DWORD *)(<span class="number">4</span> * i + a1);</span><br><span class="line">        &#125;</span><br><span class="line">        --result;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">while</span> ( i &lt; result );</span><br><span class="line">    &#125;</span><br><span class="line">LABEL_13:</span><br><span class="line">    *(_DWORD *)(a1 + <span class="number">4</span> * result) = v6;</span><br><span class="line">    sub_4010F0(a1, a2, i - <span class="number">1</span>);</span><br><span class="line">    result = a3;</span><br><span class="line">    ++i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现是一个排序的函数，将前面赋值的十个数从小到大排序</p><p><img src="/2021/06/10/BUU-%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/4.PNG" alt="4"></p><p>点击查看V23</p><p><img src="/2021/06/10/BUU-%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/5.PNG" alt="5"></p><p>V23等于string[5],依次可以看出V24等等</p><p>*<em>v4 = (const char <em>)sub_401000(&amp;v26, strlen(&amp;v26));</em></em>，接下来继续看sub_401000</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">_BYTE *__cdecl <span class="title">sub_401000</span><span class="params">(<span class="keyword">int</span> a1, <span class="keyword">int</span> a2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v2; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">size_t</span> v4; <span class="comment">// ebx</span></span><br><span class="line">  _BYTE *v5; <span class="comment">// eax</span></span><br><span class="line">  _BYTE *v6; <span class="comment">// edi</span></span><br><span class="line">  <span class="keyword">int</span> v7; <span class="comment">// eax</span></span><br><span class="line">  _BYTE *v8; <span class="comment">// ebx</span></span><br><span class="line">  <span class="keyword">int</span> v9; <span class="comment">// edi</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v10; <span class="comment">// edx</span></span><br><span class="line">  <span class="keyword">int</span> v11; <span class="comment">// edi</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v12; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v13; <span class="comment">// esi</span></span><br><span class="line">  _BYTE *result; <span class="comment">// eax</span></span><br><span class="line">  _BYTE *v15; <span class="comment">// [esp+Ch] [ebp-10h]</span></span><br><span class="line">  _BYTE *v16; <span class="comment">// [esp+10h] [ebp-Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v17; <span class="comment">// [esp+14h] [ebp-8h]</span></span><br><span class="line">  <span class="keyword">int</span> v18; <span class="comment">// [esp+18h] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  v2 = a2 / <span class="number">3</span>;</span><br><span class="line">  v3 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( a2 % <span class="number">3</span> &gt; <span class="number">0</span> )</span><br><span class="line">    ++v2;</span><br><span class="line">  v4 = <span class="number">4</span> * v2 + <span class="number">1</span>;</span><br><span class="line">  v5 = <span class="built_in">malloc</span>(v4);</span><br><span class="line">  v6 = v5;</span><br><span class="line">  v15 = v5;</span><br><span class="line">  <span class="keyword">if</span> ( !v5 )</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="built_in">memset</span>(v5, <span class="number">0</span>, v4);</span><br><span class="line">  v7 = a2;</span><br><span class="line">  v8 = v6;</span><br><span class="line">  v16 = v6;</span><br><span class="line">  <span class="keyword">if</span> ( a2 &gt; <span class="number">0</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      v9 = <span class="number">0</span>;</span><br><span class="line">      v10 = <span class="number">0</span>;</span><br><span class="line">      v18 = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">do</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( v3 &gt;= v7 )</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        ++v10;</span><br><span class="line">        v9 = *(<span class="keyword">unsigned</span> __int8 *)(v3++ + a1) | (v9 &lt;&lt; <span class="number">8</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">while</span> ( v10 &lt; <span class="number">3</span> );</span><br><span class="line">      v11 = v9 &lt;&lt; <span class="number">8</span> * (<span class="number">3</span> - v10);</span><br><span class="line">      v12 = <span class="number">0</span>;</span><br><span class="line">      v17 = v3;</span><br><span class="line">      v13 = <span class="number">18</span>;</span><br><span class="line">      <span class="keyword">do</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( v10 &gt;= v12 )</span><br><span class="line">        &#123;</span><br><span class="line">          *((_BYTE *)&amp;v18 + v12) = (v11 &gt;&gt; v13) &amp; <span class="number">0x3F</span>;</span><br><span class="line">          v8 = v16;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          *((_BYTE *)&amp;v18 + v12) = <span class="number">64</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        *v8++ = byte_407830[*((<span class="keyword">char</span> *)&amp;v18 + v12)];</span><br><span class="line">        v13 -= <span class="number">6</span>;</span><br><span class="line">        ++v12;</span><br><span class="line">        v16 = v8;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">while</span> ( v13 &gt; <span class="number">-6</span> );</span><br><span class="line">      v3 = v17;</span><br><span class="line">      <span class="keyword">if</span> ( v17 &gt;= a2 )</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      v7 = a2;</span><br><span class="line">    &#125;</span><br><span class="line">    v6 = v15;</span><br><span class="line">  &#125;</span><br><span class="line">  result = v6;</span><br><span class="line">  *v8 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/06/10/BUU-%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/7.PNG" alt="7"></p><p>看到这个就知道是熟悉的base64加密</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( String == v7 + <span class="number">34</span>                       <span class="comment">// sub_4010F0函数后的第一位等于51+34=85--&gt;&#x27;U&#x27;</span></span><br><span class="line">       &amp;&amp; <span class="built_in">string</span>[<span class="number">1</span>] == v11                   <span class="comment">// 第2位，等于v13,即sub_4010F0函数返回值的第5位值--&gt;&#x27;J&#x27; </span></span><br><span class="line">       &amp;&amp; <span class="number">4</span> * <span class="built_in">string</span>[<span class="number">2</span>] - <span class="number">141</span> == <span class="number">3</span> * v9</span><br><span class="line">       &amp;&amp; <span class="built_in">string</span>[<span class="number">3</span>] / <span class="number">4</span> == <span class="number">2</span> * (v14 / <span class="number">9</span>)</span><br><span class="line">       &amp;&amp; !<span class="built_in">strcmp</span>(v4, <span class="string">&quot;ak1w&quot;</span>)</span><br><span class="line">       &amp;&amp; !<span class="built_in">strcmp</span>(v5, <span class="string">&quot;V1Ax&quot;</span>) )</span><br></pre></td></tr></table></figure><p>看最后的一段代码</p><p>然后通过python脚本解密ak1w和V1Ax</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">str1 = <span class="string">&#x27;ak1w&#x27;</span></span><br><span class="line">str2 = <span class="string">&#x27;V1Ax&#x27;</span></span><br><span class="line">flag1 = base64.b64decode(str1)</span><br><span class="line">flag2 = base64.b64decode(str2)</span><br><span class="line">print(flag1)</span><br><span class="line">print(flag2)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到 jMp和WP1</p><p>上面第三行和第四行代码是比较 4*’x-141==3 *69 算出来x=87，是W</p><p>所以WP1在前面，flag就可以组合起来了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;刮开有奖&quot;&gt;&lt;a href=&quot;#刮开有奖&quot; class=&quot;headerlink&quot; title=&quot;刮开有奖&quot;&gt;&lt;/a&gt;刮开有奖&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2021/06/10/BUU-%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2021 DASCTF X BUUOJ 五月大联动</title>
    <link href="http://example.com/2021/06/05/5yuedald/"/>
    <id>http://example.com/2021/06/05/5yuedald/</id>
    <published>2021-06-05T14:24:11.000Z</published>
    <updated>2021-06-05T15:35:27.253Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PaperPlease"><a href="#PaperPlease" class="headerlink" title="PaperPlease"></a>PaperPlease</h2><p>先查壳，发现没有，用IDA打开，比较简单，直接看main函数</p><p><img src="/2021/06/05/5yuedald/1.PNG" alt="1"></p><p>先比较了一下前面几位输入的是不是和DASCTF{ }一样，然后调用了一下这个巨长的函数，打开看一下</p><p><img src="/2021/06/05/5yuedald/2.PNG" alt="2"></p><p>可以看出是和一段数据进行了异或操作,off_4010点进去看看</p><p><img src="/2021/06/05/5yuedald/3.PNG" alt="3"></p><p>可以看到一串数据，思路清晰了，直接解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">r = <span class="string">&quot;5c715207e3abed7dfb7c8ea9c82d0e29&quot;</span></span><br><span class="line"></span><br><span class="line">t = [<span class="number">0x56</span>,<span class="number">0x5</span>,<span class="number">0x53</span>,<span class="number">0x52</span>,<span class="number">0x4</span>,<span class="number">0x3</span>,<span class="number">0x53</span>,<span class="number">0x54</span>,<span class="number">0x4</span>,<span class="number">0x0B</span>,<span class="number">0x53</span>,<span class="number">0x51</span>,<span class="number">0x6</span>,<span class="number">0x6</span>,<span class="number">0x0F</span>,<span class="number">0x55</span>,<span class="number">0x5</span>,<span class="number">0x5B</span>,<span class="number">0x3</span>,<span class="number">0x56</span>,<span class="number">0x0E</span>,<span class="number">0x7</span>,<span class="number">0x57</span>,<span class="number">0x0E</span>,<span class="number">0x1</span>,<span class="number">0x0D</span>,<span class="number">0x56</span>,<span class="number">0x0</span>,<span class="number">0x4</span>,<span class="number">0x6</span>,<span class="number">0x0A</span>,<span class="number">0x5D</span>]</span><br><span class="line"></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(r)):</span><br><span class="line">      flag += <span class="built_in">chr</span>(<span class="built_in">ord</span>(r[i])^t[i])</span><br><span class="line"></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p><img src="/2021/06/05/5yuedald/4.PNG" alt="4"></p><p>最后在加上DASCTF{ }就可以了</p><h2 id="end"><a href="#end" class="headerlink" title="end"></a>end</h2><p>该程序逻辑其实也十分清晰，就是一道迷宫题，如下图所示，2代表前进七步，8代表后退七步，6代表前进一步，4代表后退一步。每前进一步就和amp数组里的值进行比较，为1则继续前进，不为1则退出，直到走到”#”的位置</p><p><img src="/2021/06/05/5yuedald/5.PNG" alt="5"></p><p><img src="/2021/06/05/5yuedald/6.PNG" alt="6"></p><p>找到了数据才顺藤摸瓜找到函数</p><p>看着这个数出来的是错的，看了大佬讲的才知道32位的程序每一步是4个字节，而IDAHEX显示的是单字节，要调整成四字节的才可以看出，把原来的数据类型改成unsigned,8列，四字节</p><p><img src="/2021/06/05/5yuedald/43.PNG" alt="43"></p><p>计算一下就可以推导出结果</p><p><strong>2622668662224422666</strong><img src="/2021/06/05/5yuedald/67.PNG" alt="67"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;PaperPlease&quot;&gt;&lt;a href=&quot;#PaperPlease&quot; class=&quot;headerlink&quot; title=&quot;PaperPlease&quot;&gt;&lt;/a&gt;PaperPlease&lt;/h2&gt;&lt;p&gt;先查壳，发现没有，用IDA打开，比较简单，直接看main函数&lt;/p&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ESP定理</title>
    <link href="http://example.com/2021/06/01/ESP%E5%AE%9A%E7%90%86/"/>
    <id>http://example.com/2021/06/01/ESP%E5%AE%9A%E7%90%86/</id>
    <published>2021-06-01T14:07:58.000Z</published>
    <updated>2021-06-01T14:09:54.981Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ESP定律"><a href="#ESP定律" class="headerlink" title="ESP定律"></a>ESP定律</h1><h2 id="一-准备知识"><a href="#一-准备知识" class="headerlink" title="一.准备知识"></a>一.准备知识</h2><p>在我们开始讨论ESP定律之前，我先给你讲解一下一些简单的汇编知识。<br>1.call<br>这个命令是访问子程序的一个汇编基本指令。也许你说，这个我早就知道了！别急请继续看完。call真正的意义是什么呢？我们可以这样来理解： </p><p>向堆栈中压入下一行程序的地址；<br>JMP到call的子程序地址处。<br>例如：<br>00401029.E8 DA240A00 call 004A3508<br>0040102E.5A          pop edx<br>在执行了00401029以后，程序会将0040102E压入堆栈，然后JMP到004A3508地址处！ </p><p>2.RETN<br>与call对应的就是RETN了。对于RETN我们可以这样来理解：<br>将当前的ESP中指向的地址出栈；<br>JMP到这个地址。<br>这个就完成了一次调用子程序的过程。在这里关键的地方是：如果我们要返回父程序，则当我们在堆栈中进行堆栈的操作的时候，一定要保证在RETN这条指令之前，ESP指向的是我们压入栈中的地址。这也就是著名的“堆栈平衡”原理！ </p><p>3.狭义ESP定律<br>ESP定律的原理就是“堆栈平衡”原理。<br>让我们来到程序的入口处看看吧！<br>1.这个是加了ASPACK壳的入口时各个寄存器的值！<br>EAX 00000000<br>ECX 0012FFB0<br>EDX 7FFE0304  //堆栈值<br>EBX 7FFDF000  //堆栈值<br>ESP 0012FFC4<br>EBP 0012FFF0<br>ESI 77F57D70 ntdll.77F57D70<br>EDI 77F944A8 ntdll.77F944A8<br>EIP 0040D000 ASPACK.<ModuleEntryPoint><br>2.这个是ASPACK壳JMP到OEP后的寄存器的值！<br>EAX 004010CC ASPACK.004010CC<br>ECX 0012FFB0<br>EDX 7FFE0304  //堆栈值<br>EBX 7FFDF000  //堆栈值<br>ESP 0012FFC4<br>EBP 0012FFF0<br>ESI 77F57D70 ntdll.77F57D70<br>EDI 77F944A8 ntdll.77F944A8<br>EIP 004010CC ASPACK.004010CC<br>呵呵~是不是除了EIP不同以外，eax保存当前OEP值，其他都一模一样啊！<br>为什么会这样呢？我们来看看 </ModuleEntryPoint></p><p>0040D000 A&gt;  60               pushad  //注意这里ESP=0012FFC4<br>0040D001     E8 00000000      call ASPACK.0040D006  //ESP=0012FFA4 </p><p>PUSHAD就是把所有寄存器压栈！我们在到壳的最后看看： </p><p>0040D558     61               popad  //ESP=0012FFA4<br>0040D559     75 08            jnz short ASPACK.0040D563 //注意这里ESP=0012FFC4 </p><p>也就是说当我们对ESP的0012FFA4下硬件访问断点之后。当程序要通过堆栈访问这些值<br>，从而恢复原来寄存器的值，准备跳向苦苦寻觅的OEP的时候，OD帮助我们中断下来。 </p><p>小结：我们可以把壳假设为一个子程序，当壳把代码解压前和解压后，他必须要做的是遵循堆栈平衡的原理。 </p><p>因为大家对ESP理解各有异同，但是，大同小异！一般理解可以为：<br>1、在命令行下断hr esp-4（此时的ESP就是OD载入后当前显示的值）<br>2、hr ESP(关键标志下一行代码所指示的ESP值(单步通过))</p><h3 id="1-ESP定律的原理是什么？"><a href="#1-ESP定律的原理是什么？" class="headerlink" title="1.ESP定律的原理是什么？"></a>1.ESP定律的原理是什么？</h3><p>堆栈平衡原理。 </p><h3 id="2-ESP定律的适用范围是什么？"><a href="#2-ESP定律的适用范围是什么？" class="headerlink" title="2.ESP定律的适用范围是什么？"></a>2.ESP定律的适用范围是什么？</h3><p>几乎全部的压缩壳，部分加密壳。只要是在JMP到OEP后，ESP=0012FFC4的壳，理论上我们都可以使用。但是在何时下断点避开校验，何时下断OD才能断下来，这还需要多多总结和多多积累。 </p><h3 id="3-是不是只能下断12FFA4的访问断点？"><a href="#3-是不是只能下断12FFA4的访问断点？" class="headerlink" title="3.是不是只能下断12FFA4的访问断点？"></a>3.是不是只能下断12FFA4的访问断点？</h3><p>当然不是，那只是ESP定律的一个体现，我们运用的是ESP定律的原理，而不应该是他的具体数值，不能说12FFA4，或者12FFC0就是ESP定律，他们只是ESP定律的一个应用罢了！ </p><p>内存断点<br>   1、要解决的问题是：<br>   1.什么是内存断点？<br>   2.如何在寻找OEP时使用内存断点。 </p><h3 id="4、内存断点寻找OEP的原理"><a href="#4、内存断点寻找OEP的原理" class="headerlink" title="4、内存断点寻找OEP的原理"></a>4、内存断点寻找OEP的原理</h3><p>i. 首先，在OD中内存断点和普通断点（F2下断）是有本质区别的。 </p><p>内存断点等效于命令bpm，他的中断要用到DR0-DR7的调试寄存器，也就是说OD通过这些DR0-DR7的调试寄存器来判断是否断下普通断点（F2下断）等效于bpx，他是在所执行的代码的当前地址的一个字节修改为CC（int3）。当程序运行到int3的时候就会产生一个异常，而这个异常将交给OD处理，把这个异常给EIP-1以后，就正好停在了需要的中断的地方（这个根据系统不同会不一样），同时OD在把上面的int3修改回原来的代码。<br>内存断点分为：内存访问断点，内存写入断点。<br>我们知道，在程序运行的时候会有3种基本的状态产生：读取–&gt;写入–&gt;执行。 </p><p>004AE242   A1 00104000  mov eax,dword ptr ds:[004AE24C]  //004AE24C处的内存读取<br>004AE247   A3 00104000  mov dword ptr ds:[004AE24C],eax  //004AE24C处的内存写入<br>004AE24C   83C0 01      add eax,1                       //004AE24C处的内存执行 </p><p>  1.当对004AE24C下内存访问断点的时候，可以中断在004AE242也可以中断在004AE247。<br>  2.当对004AE24C下内存写入断点的时候，只能中断在004AE247。<br>   3．当执行004AE24C的时候，只能中断在004AE24C </p><p>到这里你可能不明白了，为什么内存访问断点能中断在004AE247这一句对004AE24C的写入，而且还能中断在004AE24C的执行呢？其实很简单，我们只要仔细体会一下“内存访问”这四个字的含义遍可以知道，当我们对004AE24C进行读取的时候需要“访问”他吧，当我对004AE24C进行写入的时候也需要“访问”他吧！！当然我们要执行内存地址004AE24C的代码的时候也是还是要“访问”他的！ </p><p>  所以我们不难得出下面的结论：<br>  1.内存写入中断的地方，一定是也可以用内存访问中断。<br>  2.内存执行的地方，也可以用内存访问中断。 </p><p>如果这时你认为，那么内存写入岂不是没用了。呵呵~那我要告诉你当然不是，如果你想快速的准确的定位到004AE247这一行的时候，那么他就大有作用了！ </p><p> 总结一下：内存断点不修改原代码，不会像普通断点那样因为修改代码被程序校验而导致中断失败；对于区段的访问只是区域大了一点，其原理和上面分析的三行代码是一样的。 </p><p>  ii.如何使用内存断点来寻找OEP呢？<br>  要回答这个问题首先要回答这一个问题：壳是如何解压代码的？ </p><p>正如我们知道的，壳如果要把原来加密或压缩的代码运行起来就必须要解压和解密原来的代码。而这一个过程我们难道不能将他看做是对代码段（code段）的写入吗？好了，解压完毕了。我们要从壳代码的区段JMP到原来的代码段的时候，难道不正是对代码段（code段）的执行吗？ </p><p>理清了上面的关系就好办了，那么如果载入OD后，我们直接对code段下内存访问断点的时候，一定会中断在壳对code段的写入的代码的上面，就像上面的004AE247的这一行。而如果当他把code段的代码全部解压解密完毕了以后，JMP到OEP的时候，我们是不是还可以停在OEP的代码上面呢？而且每按下F9都会中断，因为这时code段在执行中哦！ </p><p>而如果你还要继续问我为什么一定要到那个地方才可以下断呢？我难道不可以一开始就下断吗？ </p><p>正入我上面所说的，如果你在前面下断很可能壳对code段还没解压完毕呢，这时如果你不停的按F9，你将会看到OD的下方不断的在提示你，“对401000写入中断”“对401002写入中断”“对401004写入中断”…….如果你不介意按F9到他把正个code段写完的话，我除了同情你的“F9”以外，没什么其他的意见！ </p><p>  那么我们就没有别更快一点的办法了吗？<br>  有的！那就是我们呼之欲出的两次内存断点办法。<br>  怎么理解两次内存断点呢？ </p><p>让我来做一个假设吧，假设我是一个壳的作者。一个EXE文件的有code段，data段，rsrc段…..依次排列在你的内存空间中，那么我会怎么解码呢？呵呵~我比较笨一点，我会先将code段解码，然后再将data段解压，接着是rsrc段……那么你不难发现，只要你在data断或者rsrc段下内存访问断点，那么中断的时候code段就已经解压完毕了。这时我们再对code段下内存访问断点，不就可以到达OEP了吗？ </p><p>  这里注意上面虽然下了两次内存访问断点，但是本质是不一样的，目的也是不一样的。 </p><p> 1.对data段下内存访问断点而中断是因为内存写入中断，目的是断在对对data段的解压时，这时壳要对data段写数据，但是code段已经解压 完毕。<br> 2.对code段下内存访问断点而中断是因为内存执行中断，目的当然就是寻找OEP了。 </p><p> 总结一下：如果我们知道壳在什么地方对code段解压完毕我们就可以使用内存断点，找到OEP。如果不知道，那么我们就依靠2次内存断点去找，如果还不行就用多次内存断点。总之明白了原理在多次的内存断点其实都一样。从这个过程中我们了解的是壳在对区段解码的顺序！ </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ESP定律&quot;&gt;&lt;a href=&quot;#ESP定律&quot; class=&quot;headerlink&quot; title=&quot;ESP定律&quot;&gt;&lt;/a&gt;ESP定律&lt;/h1&gt;&lt;h2 id=&quot;一-准备知识&quot;&gt;&lt;a href=&quot;#一-准备知识&quot; class=&quot;headerlink&quot; title=&quot;一</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>BUU新年快乐</title>
    <link href="http://example.com/2021/06/01/BUU%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90/"/>
    <id>http://example.com/2021/06/01/BUU%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90/</id>
    <published>2021-06-01T13:57:59.000Z</published>
    <updated>2021-06-01T14:06:38.632Z</updated>
    
    <content type="html"><![CDATA[<h1 id="新年快乐"><a href="#新年快乐" class="headerlink" title="新年快乐"></a>新年快乐</h1><p>打开IDA一看怎么就两个函数，有问题</p><p>查一下壳，有一个UPX壳</p><p><img src="/2021/06/01/BUU%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90/ke.PNG" alt="ke"></p><p>可以用工具直接脱壳，这里用一下OD手动脱壳,采用ESP定律的方法找OEP</p><p><img src="/2021/06/01/BUU%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90/r.PNG" alt="r"></p><p>打开往上找直接看到了POPAX</p><p>直接在jmp新年快乐处下断点，F9运行到这里，F8就跳转到OEP</p><p><img src="/2021/06/01/BUU%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90/4.PNG" alt="4"></p><p>直接右键用OD自带的脱壳</p><p>得到一个新的程序</p><p>打开直接查看main函数</p><p><img src="/2021/06/01/BUU%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90/12.PNG" alt="12"></p><p>是一个简单的比较</p><p>flag就是：<strong>flag{HappyNewYear!}</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;新年快乐&quot;&gt;&lt;a href=&quot;#新年快乐&quot; class=&quot;headerlink&quot; title=&quot;新年快乐&quot;&gt;&lt;/a&gt;新年快乐&lt;/h1&gt;&lt;p&gt;打开IDA一看怎么就两个函数，有问题&lt;/p&gt;
&lt;p&gt;查一下壳，有一个UPX壳&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2021/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ISCC2021-RE2</title>
    <link href="http://example.com/2021/05/29/ISCC2021-RE2/"/>
    <id>http://example.com/2021/05/29/ISCC2021-RE2/</id>
    <published>2021-05-29T13:04:29.000Z</published>
    <updated>2021-05-29T13:54:35.152Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h1><p>题目提示分析，直接打开IDA分析</p><p>shift+F12查看字符串，找到flag的句子</p><p><img src="/2021/05/29/ISCC2021-RE2/zid.PNG" alt="zid"></p><p>找到主函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> Str[<span class="number">3</span>]; <span class="comment">// [esp+11h] [ebp-97h] BYREF</span></span><br><span class="line">  _BYTE v5[<span class="number">57</span>]; <span class="comment">// [esp+14h] [ebp-94h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// [esp+4Dh] [ebp-5Bh]</span></span><br><span class="line">  <span class="keyword">char</span> v7[<span class="number">64</span>]; <span class="comment">// [esp+51h] [ebp-57h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> v8[<span class="number">7</span>]; <span class="comment">// [esp+91h] [ebp-17h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v9; <span class="comment">// [esp+98h] [ebp-10h]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [esp+9Ch] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  __main();</span><br><span class="line">  v6 = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v5, <span class="number">0</span>, <span class="number">4</span> * (((Str - v5 + <span class="number">64</span>) &amp; <span class="number">0xFFFFFFFC</span>) &gt;&gt; <span class="number">2</span>));</span><br><span class="line">  Str[<span class="number">0</span>] = <span class="number">67</span>;</span><br><span class="line">  Str[<span class="number">1</span>] = <span class="number">-33</span>;</span><br><span class="line">  Str[<span class="number">2</span>] = <span class="number">20</span>;</span><br><span class="line">  v5[<span class="number">0</span>] = <span class="number">3</span>;</span><br><span class="line">  v5[<span class="number">1</span>] = <span class="number">13</span>;</span><br><span class="line">  v5[<span class="number">2</span>] = <span class="number">44</span>;</span><br><span class="line">  v5[<span class="number">3</span>] = <span class="number">9</span>;</span><br><span class="line">  v5[<span class="number">4</span>] = <span class="number">1</span>;</span><br><span class="line">  v5[<span class="number">5</span>] = <span class="number">23</span>;</span><br><span class="line">  v5[<span class="number">6</span>] = <span class="number">23</span>;</span><br><span class="line">  v5[<span class="number">7</span>] = <span class="number">8</span>;</span><br><span class="line">  v5[<span class="number">8</span>] = <span class="number">-4</span>;</span><br><span class="line">  v5[<span class="number">9</span>] = <span class="number">43</span>;</span><br><span class="line">  v5[<span class="number">10</span>] = <span class="number">-6</span>;</span><br><span class="line">  v5[<span class="number">11</span>] = <span class="number">20</span>;</span><br><span class="line">  v5[<span class="number">12</span>] = <span class="number">23</span>;</span><br><span class="line">  v5[<span class="number">13</span>] = <span class="number">-7</span>;</span><br><span class="line">  v5[<span class="number">14</span>] = <span class="number">37</span>;</span><br><span class="line">  v5[<span class="number">15</span>] = <span class="number">-11</span>;</span><br><span class="line">  v5[<span class="number">16</span>] = <span class="number">34</span>;</span><br><span class="line">  v5[<span class="number">17</span>] = <span class="number">61</span>;</span><br><span class="line">  v5[<span class="number">18</span>] = <span class="number">-50</span>;</span><br><span class="line">  v5[<span class="number">19</span>] = <span class="number">24</span>;</span><br><span class="line">  v5[<span class="number">20</span>] = <span class="number">22</span>;</span><br><span class="line">  v5[<span class="number">21</span>] = <span class="number">10</span>;</span><br><span class="line">  qmemcpy(v8, <span class="string">&quot;REVERSE&quot;</span>, <span class="keyword">sizeof</span>(v8));</span><br><span class="line">  v9 = <span class="built_in">strlen</span>(Str);              </span><br><span class="line">  <span class="built_in">printf</span>(Format);                        </span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, v7);                              <span class="comment">//输入flag</span></span><br><span class="line">  mix(v7, v8, v9);                             <span class="comment">//经过mix混淆</span></span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; v9; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( v7[i] != Str[i] )                     <span class="comment">//与明文比较</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">puts</span>(Buffer);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">puts</span>(aFlag);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进入mix查看</p><p><img src="/2021/05/29/ISCC2021-RE2/mix.PNG" alt="mix"></p><p>第一个for先全部减去64，因为‘A’的ASCII 码为65，这里可以理解为获取在字母表中位置</p><p>第二个for当前值=当前值与下一值得差</p><p>第三个for判断k是不是小于7，str取余</p><p>第四个for将str作为密匙循环自加</p><p>第五个for 中间对称互换</p><p>最后利用str作为判断依据</p><p>用7.5的IDA找不到str，很神奇，用7.0的可以</p><p><img src="/2021/05/29/ISCC2021-RE2/%E6%8D%95%E8%8E%B7.PNG" alt="捕获"></p><p>91-97是str密钥</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">a =[<span class="number">67</span>,-<span class="number">33</span>,<span class="number">20</span>,<span class="number">3</span>,<span class="number">13</span>,<span class="number">44</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">23</span>,<span class="number">23</span>,<span class="number">8</span>,-<span class="number">4</span>,<span class="number">43</span>,-<span class="number">6</span>,<span class="number">20</span>,<span class="number">23</span>,-<span class="number">7</span>,<span class="number">37</span>,-<span class="number">11</span>,<span class="number">34</span>,<span class="number">61</span>,-<span class="number">50</span>,<span class="number">24</span>,<span class="number">22</span>,<span class="number">10</span>]</span><br><span class="line"><span class="built_in">str</span> = [<span class="number">82</span>,<span class="number">69</span>,<span class="number">86</span>,<span class="number">69</span>,<span class="number">82</span>,<span class="number">83</span>,<span class="number">69</span>]</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(<span class="built_in">str</span>)):</span><br><span class="line"><span class="built_in">str</span>[k] %= <span class="number">64</span></span><br><span class="line"><span class="comment">#加密用的密匙都是取余后的，所以先取余操作</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">str</span>[n%<span class="number">7</span>] &amp; <span class="number">1</span>:</span><br><span class="line">a[n] -= <span class="number">2</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">a[n] -= <span class="number">1</span></span><br><span class="line"><span class="comment">#先逆加一和加二</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)//<span class="number">2</span>):</span><br><span class="line">x = a[m]</span><br><span class="line">a[m] = a[<span class="built_in">len</span>(a)-<span class="number">1</span>-m]</span><br><span class="line">a[<span class="built_in">len</span>(a)-<span class="number">1</span>-m] = x</span><br><span class="line"><span class="comment">#对称互换</span></span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">a[l] -= <span class="built_in">str</span>[l%<span class="number">7</span>]</span><br><span class="line"><span class="comment">#逆自加，既自减</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)-<span class="number">2</span>,-<span class="number">1</span>,-<span class="number">1</span>):</span><br><span class="line">a[j] += a[j+<span class="number">1</span>]</span><br><span class="line"><span class="comment">#这一步需要从后往前，因为最后一个字符是不变的</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">a[i] += <span class="number">64</span></span><br><span class="line"><span class="comment">#加回64</span></span><br><span class="line">print(a)</span><br><span class="line"><span class="comment">#列表形式输出（ASCII码形式）</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">a[i] = <span class="built_in">chr</span>(a[i])</span><br><span class="line"><span class="comment">#转为字符</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span>.join(a)<span class="comment">#串成串</span></span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">[73, 83, 67, 67, 123, 82, 69, 86, 69, 82, 83, 69, 95, 73, 83, 95, 78, 79,</span></span><br><span class="line"><span class="string">84, 95, 72, 65, 82, 68, 125]</span></span><br><span class="line"><span class="string">ISCC&#123;REVERSE_IS_NOT_HARD&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Analysis&quot;&gt;&lt;a href=&quot;#Analysis&quot; class=&quot;headerlink&quot; title=&quot;Analysis&quot;&gt;&lt;/a&gt;Analysis&lt;/h1&gt;&lt;p&gt;题目提示分析，直接打开IDA分析&lt;/p&gt;
&lt;p&gt;shift+F12查看字符串，找到flag的</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ISCC2021-re</title>
    <link href="http://example.com/2021/05/27/iscc-re1/"/>
    <id>http://example.com/2021/05/27/iscc-re1/</id>
    <published>2021-05-27T11:26:28.000Z</published>
    <updated>2021-05-27T11:43:37.632Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Garden"><a href="#Garden" class="headerlink" title="Garden"></a>Garden</h1><p>下载下来，题目给了一个pyc文件，很明显要反编译成py文件，python2的可以用下uncompyle2转换，这里是python3的，用在线工具就可以<a href="https://tool.lu/pyc/">python反编译 - 在线工具 (tool.lu)</a></p><p>反编译的结果如下</p><p><img src="/2021/05/27/iscc-re1/23.PNG" alt="23"></p><p><img src="/2021/05/27/iscc-re1/8.PNG" alt="8"></p><p>第八行def了check函数，第32行调用此函数，函数先判断了flag的长度是不是等于f的长度，然后就是异或<strong>a^b^123&lt;=&gt;a=b^c</strong></p><p>python中的chr和 ord 用法</p><p>ord()取字符对应ascii码,chr()返回ascii码对应字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">f = <span class="string">&#x27;2(88\x006\x1a\x10\x10\x1aIKIJ+\x1a\x10\x10\x1a\x06&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line">flag += <span class="built_in">chr</span>(<span class="built_in">ord</span>(i)^<span class="number">123</span>)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p><img src="/2021/05/27/iscc-re1/2.PNG" alt="2"></p><p>得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Garden&quot;&gt;&lt;a href=&quot;#Garden&quot; class=&quot;headerlink&quot; title=&quot;Garden&quot;&gt;&lt;/a&gt;Garden&lt;/h1&gt;&lt;p&gt;下载下来，题目给了一个pyc文件，很明显要反编译成py文件，python2的可以用下uncompyle2转换</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>RC4加密算法原理与实现</title>
    <link href="http://example.com/2021/05/20/RC4/"/>
    <id>http://example.com/2021/05/20/RC4/</id>
    <published>2021-05-20T12:29:22.000Z</published>
    <updated>2021-05-24T15:16:43.111Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RC4-的算法原理"><a href="#RC4-的算法原理" class="headerlink" title="RC4 的算法原理"></a>RC4 的算法原理</h1><p>RC4算法的特点是算法简单，运行速度快，而且密钥长度是可变的，可变范围为1-256字节(8-2048比特)，在如今技术支持的前提下，当密钥长度为128比特时，用暴力法搜索密钥已经不太可行，所以可以预见 RC4的密钥范围任然可以在今后相当长的时间里抵御暴力搜索密钥的攻击。实际上，如今也没有找到对于128bit密钥长度的RC4加密算法的有效攻击方法。</p><p><img src="https://img-blog.csdnimg.cn/20210301143758983.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ptaWxr,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>RC4算法有4个关键的变量</p><p>密钥流：RC4 算法的关键是根据明文和密钥生成相应的密钥流，密钥流的长度和明文的长度是对应的，也就是说明文的长度是 500 字节，那么密钥流也是 500 字节。当然，加密生成的密文也是 500 字节，因为密文第 i 字节 = 明文第 i 字节 ^ 密钥流第 i 字节；</p><p>状态向量 S：长度为 256Byte，S[0],S[1]…S[255]。每个单元都是一个 Byte，算法运行的任何时候，S 都包括 0-255 的 8Bit 的排列组合，只不过值的位置发生了变换；</p><p>临时向量 T：长度也为 256Byte，每个单元也是一个 Byte。如果密钥的长度是 256Byte，就直接把密钥的值赋给 T，否则，轮转地将密钥的每个 Byte 赋给 T；</p><p>密钥 K：长度为 1-256Byte，注意密钥的长度（keylen）与明文长度、密钥流的长度没有必然关系，通常密钥的长度为 16Byte（128Bit）。</p><h2 id="加密原理"><a href="#加密原理" class="headerlink" title="加密原理"></a>加密原理</h2><p><img src="/2021/05/20/RC4/007juUiNly1gqp6buze02j30px0hmq9w.jpg" alt="img"></p><h3 id="1-初始-S-和-T"><a href="#1-初始-S-和-T" class="headerlink" title="1.初始 S 和 T"></a>1.初始 S 和 T</h3><p>先初始化状态向量 S（256 个字节，用来作为密钥流生成的种子 1）：按照升序，给每个字节赋值 0,1,2,3,4,5,6…,254,255。<br>再初始化临时向量 T（初始密钥 K，由用户输入）：长度任意，如果输入长度小于 256Byte，则进行轮转，直到填满。例如：输入密钥的是 1,2,3,4,5，那么填入的是 1,2,3,4,5,1,2,3,4,5,1,2,3,4,5…。由上述轮转过程得到 256 个字节的临时向量 T（用来作为密钥流生成的种子 2）</p><h3 id="2-初始排列S"><a href="#2-初始排列S" class="headerlink" title="2.初始排列S"></a>2.初始排列S</h3><p>开始对状态向量 S 进行置换操作（用来打乱初始种子 1），按照下列规则进行，从第零个字节开始，执行 256 次，保证每个字节都得到处理这样处理后的状态向量 S 几乎是带有一定的随机性了。</p><h3 id="3-产生密钥流"><a href="#3-产生密钥流" class="headerlink" title="3.产生密钥流"></a>3.产生密钥流</h3><h1 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h1><h3 id="c语言实现"><a href="#c语言实现" class="headerlink" title="c语言实现"></a>c语言实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> longULONG;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 初始化算法（KSA）函数</span></span><br><span class="line"><span class="comment"> * 参数 1: 一个 256 长度的 char 型数组，定义为: unsigned char sBox[256];</span></span><br><span class="line"><span class="comment"> * 参数 2: 密钥，其内容可以随便定义：char key[256];</span></span><br><span class="line"><span class="comment"> * 参数 3: 密钥的长度，Len = strlen(key);</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc4_init</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span>* s, <span class="keyword">unsigned</span> <span class="keyword">char</span>* key, <span class="keyword">unsigned</span> <span class="keyword">long</span> Len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> k[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> tmp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i] = i;</span><br><span class="line">        k[i] = key[i%Len];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        j = (j + s[i] + k[i]) % <span class="number">256</span>;</span><br><span class="line">        tmp = s[i];</span><br><span class="line">        s[i] = s[j]; <span class="comment">// 交换 s[i] 和 s[j]</span></span><br><span class="line">        s[j] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 伪随机子密码生成算法（PRGA）函数完成加、解密。</span></span><br><span class="line"><span class="comment"> * 过程中，密钥的主要功能是将 S 搅乱，i 确保 S 的每个元素都得到处理，j 保证 S 的搅乱是随机的。</span></span><br><span class="line"><span class="comment"> * 由此，不同的 S 在经过 PRGA 处理后可以得到不同的子密钥序列，将 S 和明文进行 xor 运算，得到密文，解密过程也完全相同。</span></span><br><span class="line"><span class="comment"> * 参数 1：是上边 rc4_init 函数中，被搅乱的 S;</span></span><br><span class="line"><span class="comment"> * 参数 2：是需要加密的 Data 数据;</span></span><br><span class="line"><span class="comment"> * 参数 3：是 Data 的长度。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc4_crypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span>* s, <span class="keyword">unsigned</span> <span class="keyword">char</span>* Data, <span class="keyword">unsigned</span> <span class="keyword">long</span> Len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> tmp;</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; Len; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">        j = (j + s[i]) % <span class="number">256</span>;</span><br><span class="line">        tmp = s[i];</span><br><span class="line">        s[i] = s[j]; <span class="comment">// 交换 s[x] 和 s[y]</span></span><br><span class="line">        s[j] = tmp;</span><br><span class="line">        t = (s[i] + s[j]) % <span class="number">256</span>;</span><br><span class="line">        Data[k] ^= s[t];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> s[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;, s2[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;   <span class="comment">// S</span></span><br><span class="line">    <span class="keyword">char</span> key[<span class="number">256</span>] = &#123; <span class="string">&quot;justfortest&quot;</span> &#125;;</span><br><span class="line">    <span class="keyword">char</span> pData[<span class="number">512</span>] = <span class="string">&quot;这是一个用来加密的数据 Data&quot;</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> len = <span class="built_in">strlen</span>(pData);</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;pData=%s\n&quot;</span>, pData);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;key=%s, length=%zu\n\n&quot;</span>, key, <span class="built_in">strlen</span>(key));</span><br><span class="line"></span><br><span class="line">    rc4_init(s, (<span class="keyword">unsigned</span> <span class="keyword">char</span>*)key, <span class="built_in">strlen</span>(key));   <span class="comment">// 已经完成了初始化</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;完成对 S[i] 的初始化，如下：\n\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;<span class="number">256</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%02X&quot;</span>, s[i]);</span><br><span class="line">        <span class="keyword">if</span> (i &amp;&amp; (i + <span class="number">1</span>) % <span class="number">16</span> == <span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;<span class="number">256</span>; i++)                          <span class="comment">// 用 s2[i] 暂时保留经过初始化的 s[i]，很重要！</span></span><br><span class="line">    &#123;</span><br><span class="line">        s2[i] = s[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;已经初始化，现在加密: \n\n&quot;</span>);</span><br><span class="line">    rc4_crypt(s, (<span class="keyword">unsigned</span> <span class="keyword">char</span>*)pData, len);        <span class="comment">// 加密</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;pData=%s\n\n&quot;</span>, pData);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;已经加密，现在解密: \n\n&quot;</span>);</span><br><span class="line">    rc4_crypt(s2, (<span class="keyword">unsigned</span> <span class="keyword">char</span>*)pData, len);       <span class="comment">// 解密</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;pData=%s\n\n&quot;</span>, pData);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="python实现"><a href="#python实现" class="headerlink" title="python实现"></a>python实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># RC4的Python实现</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">S_box</span>(<span class="params">R</span>):</span>  <span class="comment"># S盒</span></span><br><span class="line">    S = [x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>)]</span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="comment">#S盒打乱顺序</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        j = (j + S[i] + K[i]) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]</span><br><span class="line">    <span class="keyword">return</span> S</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_K</span>(<span class="params">key</span>):</span></span><br><span class="line">    <span class="comment">#将字符串转换为ASCII码</span></span><br><span class="line">    temp = <span class="built_in">list</span>(<span class="built_in">bytes</span>(key, encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="comment">#print(&#x27;密钥的ASCII码:&#x27;, temp)</span></span><br><span class="line">    len_key = <span class="built_in">len</span>(temp)</span><br><span class="line">    <span class="comment">#填充密钥</span></span><br><span class="line">    K = [temp[i % len_key] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>)]</span><br><span class="line">    <span class="keyword">return</span> K</span><br><span class="line"></span><br><span class="line"><span class="comment">#根据密文长度生成密钥流</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">key_box</span>(<span class="params">S, length</span>):</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    keys = []</span><br><span class="line">    length = <span class="built_in">int</span>(length)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length):</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + S[i]) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]</span><br><span class="line">        t = (S[j] + S[i]) % <span class="number">256</span></span><br><span class="line">        k = S[t]</span><br><span class="line">        keys.append(k)</span><br><span class="line">    <span class="keyword">return</span> keys</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">    choose = <span class="built_in">input</span>(<span class="string">&#x27;加密输入1，解密输入2，退出输入3：&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> choose == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        key = <span class="built_in">input</span>(<span class="string">&#x27;请输入密钥:&#x27;</span>)</span><br><span class="line">        K = gen_K(key)</span><br><span class="line">        S = S_box(K)</span><br><span class="line">        <span class="comment"># print(&#x27;S:&#x27;,S)</span></span><br><span class="line">        message = <span class="built_in">input</span>(<span class="string">&#x27;输入明文:&#x27;</span>)</span><br><span class="line">        secret = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        keys = key_box(S, <span class="built_in">len</span>(message))</span><br><span class="line">        print(<span class="string">&quot;十进制密钥流：&quot;</span>,keys)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(message)):</span><br><span class="line">            secret = secret + <span class="string">&#x27;%02x&#x27;</span> % (keys[i] ^ <span class="built_in">ord</span>(message[i]))</span><br><span class="line">        print(<span class="string">&#x27;加密后十六进制密文为:&#x27;</span>, secret)</span><br><span class="line">    <span class="keyword">if</span> choose == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">        key = <span class="built_in">input</span>(<span class="string">&#x27;请输入密钥:&#x27;</span>)</span><br><span class="line">        K = gen_K(key)</span><br><span class="line">        S = S_box(K)</span><br><span class="line">        <span class="comment"># print(&#x27;S:&#x27;,S)</span></span><br><span class="line">        secret = <span class="built_in">input</span>(<span class="string">&#x27;请输入密文:&#x27;</span>)</span><br><span class="line">        message = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        keys = key_box(S, <span class="built_in">len</span>(secret) / <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(<span class="built_in">len</span>(secret) / <span class="number">2</span>)):</span><br><span class="line">            message = message + <span class="built_in">chr</span>(<span class="built_in">int</span>(secret[<span class="number">0</span>:<span class="number">2</span>], <span class="number">16</span>) ^ keys[i])</span><br><span class="line">            secret = secret[<span class="number">2</span>:]</span><br><span class="line">        print(<span class="string">&#x27;解密后明文为:&#x27;</span>, message)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;RC4-的算法原理&quot;&gt;&lt;a href=&quot;#RC4-的算法原理&quot; class=&quot;headerlink&quot; title=&quot;RC4 的算法原理&quot;&gt;&lt;/a&gt;RC4 的算法原理&lt;/h1&gt;&lt;p&gt;RC4算法的特点是算法简单，运行速度快，而且密钥长度是可变的，可变范围为1-256字</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2021CISCN-glass</title>
    <link href="http://example.com/2021/05/18/glass/"/>
    <id>http://example.com/2021/05/18/glass/</id>
    <published>2021-05-18T13:08:23.000Z</published>
    <updated>2021-05-24T15:21:20.692Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GLASS"><a href="#GLASS" class="headerlink" title="GLASS"></a>GLASS</h1><p>360的出题被人称为让师傅们有经历了次高考</p><p>看到题目是一个apk文件</p><p>jeb打开，找到checkflag的函数，是native</p><p><img src="/2021/05/18/glass/007juUiNly1gqmwxkpwadj30js0ght96.jpg" alt="img"></p><p>但是没有想到上面引入了native-lib，看了别人的writeup后才知道，核心函数在lib.so里面，把apk文件改成zip就可以得到libnative-lib.so</p><p>看到另一种找到主函数的方法</p><p>将apk改为.zip<br>解压反编译classes.dex    使用dex2jar反编译</p><p><img src="/2021/05/18/glass/007juUiNly1gqmwxkuibpj30yu0iqmy6.jpg" alt="img"></p><p>接下来IDA打开lib.so</p><p>找到checkflag这个函数</p><p><img src="/2021/05/18/glass/007juUiNly1gqmwxkvwzuj30np0b374n.jpg" alt="img"></p><p>分别打开sub_FFCC   sub_1088  sub_10D4</p><p><img src="/2021/05/18/glass/007juUiNly1gqmwxlahshj30fu0fkq3b.jpg" alt="img"></p><p><img src="/2021/05/18/glass/007juUiNly1gqmwxktp0oj30he0ffglz.jpg" alt="img"></p><p><img src="/2021/05/18/glass/007juUiNly1gqmwxkv1j1j30mk0d4mxh.jpg" alt="img"></p><p>sub_1088中看到了256的循环，想起来是不是RC4算法</p><p>sub_FFC初始化，sub_1088 RC4加密  sub_10D4是个异或加密函数</p><p>直接上脚本</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">key = <span class="string">&#x27;12345678&#x27;</span></span><br><span class="line">key2 = [<span class="number">163</span>,  <span class="number">26</span>, <span class="number">227</span>, <span class="number">105</span>,  <span class="number">47</span>, <span class="number">187</span>,  <span class="number">26</span>, <span class="number">132</span>, <span class="number">101</span>, <span class="number">194</span>,</span><br><span class="line">        <span class="number">173</span>, <span class="number">173</span>, <span class="number">158</span>, <span class="number">150</span>,   <span class="number">5</span>,   <span class="number">2</span>,  <span class="number">31</span>, <span class="number">142</span>,  <span class="number">54</span>,  <span class="number">79</span>,</span><br><span class="line">        <span class="number">225</span>, <span class="number">235</span>, <span class="number">175</span>, <span class="number">240</span>, <span class="number">234</span>, <span class="number">196</span>, <span class="number">168</span>,  <span class="number">45</span>,  <span class="number">66</span>, <span class="number">199</span>,</span><br><span class="line">        <span class="number">110</span>,  <span class="number">63</span>, <span class="number">176</span>, <span class="number">211</span>, <span class="number">204</span>, <span class="number">120</span>, <span class="number">249</span>, <span class="number">152</span>,  <span class="number">63</span>]</span><br><span class="line">key3 = [<span class="number">146</span>, <span class="number">40</span>, <span class="number">208</span>, <span class="number">93</span>, <span class="number">26</span>, <span class="number">141</span>, <span class="number">45</span>, <span class="number">188</span>, <span class="number">84</span>, <span class="number">240</span>, <span class="number">158</span>, <span class="number">153</span>, <span class="number">171</span>, <span class="number">160</span>, <span class="number">50</span>, <span class="number">58</span>, <span class="number">46</span>, <span class="number">188</span>, <span class="number">5</span>,</span><br><span class="line">        <span class="number">123</span>, <span class="number">212</span>, <span class="number">221</span>, <span class="number">152</span>, <span class="number">200</span>, <span class="number">219</span>, <span class="number">246</span>, <span class="number">155</span>, <span class="number">25</span>, <span class="number">119</span>, <span class="number">241</span>, <span class="number">89</span>, <span class="number">7</span>, <span class="number">129</span>, <span class="number">225</span>, <span class="number">255</span>, <span class="number">76</span>, <span class="number">204</span>, <span class="number">174</span>, <span class="number">8</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(key2)):</span><br><span class="line">        j = i % <span class="number">8</span></span><br><span class="line">        fla = key2[i] ^ <span class="built_in">ord</span>(key[j])</span><br><span class="line">        key2[i] = fla</span><br><span class="line">print(key2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">39</span>, <span class="number">3</span>):</span><br><span class="line">    key3[i + <span class="number">1</span>] ^= key3[i]</span><br><span class="line">    key3[i + <span class="number">2</span>] ^= key3[i + <span class="number">1</span>]</span><br><span class="line">    key3[i] ^= key3[i + <span class="number">2</span>]</span><br><span class="line"> </span><br><span class="line">print(key3)</span><br><span class="line"> </span><br><span class="line">c = key3</span><br><span class="line"><span class="comment">#[248, 186, 106, 151, 71, 202, 232, 145, 197, 7, 110, 247, 146, 11, 57, 146, 20, 168, 175, 126, 170, 80, 69, 141, 109, 45, 182, 134, 110, 159, 134, 94, 223, 179, 30, 82, 166, 98, 106]</span></span><br><span class="line"> </span><br><span class="line">t = []</span><br><span class="line">key = <span class="string">&#x27;12345678&#x27;</span></span><br><span class="line">ch = <span class="string">&#x27;&#x27;</span></span><br><span class="line">j = <span class="number">0</span>  <span class="comment"># 初始化</span></span><br><span class="line">s = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">256</span>))  <span class="comment"># 创建有序列表</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">    j = (j + s[i] + <span class="built_in">ord</span>(key[i % <span class="built_in">len</span>(key)])) % <span class="number">256</span></span><br><span class="line">    s[i], s[j] = s[j], s[i]</span><br><span class="line">i = <span class="number">0</span>  <span class="comment"># 初始化</span></span><br><span class="line">j = <span class="number">0</span>  <span class="comment"># 初始化</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> c:</span><br><span class="line">    i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">    j = (j + s[i]) % <span class="number">256</span></span><br><span class="line">    s[i], s[j] = s[j], s[i]</span><br><span class="line">    x = (s[i] + (s[j] % <span class="number">256</span>)) % <span class="number">256</span></span><br><span class="line">    ch += <span class="built_in">chr</span>(r ^ s[x])</span><br><span class="line">print(ch)</span><br><span class="line"><span class="comment"># CISCN&#123;6654d84617f627c88846c172e0f4d46c&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/05/18/glass/007juUiNly1gqmy3bv7owj30xt042wem.jpg" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;GLASS&quot;&gt;&lt;a href=&quot;#GLASS&quot; class=&quot;headerlink&quot; title=&quot;GLASS&quot;&gt;&lt;/a&gt;GLASS&lt;/h1&gt;&lt;p&gt;360的出题被人称为让师傅们有经历了次高考&lt;/p&gt;
&lt;p&gt;看到题目是一个apk文件&lt;/p&gt;
&lt;p&gt;jeb打开，找到c</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>攻防世界re2</title>
    <link href="http://example.com/2021/05/04/re2/"/>
    <id>http://example.com/2021/05/04/re2/</id>
    <published>2021-05-04T08:21:38.000Z</published>
    <updated>2021-05-24T15:25:48.302Z</updated>
    
    <content type="html"><![CDATA[<h2 id="re1"><a href="#re1" class="headerlink" title="re1"></a>re1</h2><p>双击点开，让我输入flag</p><p><img src="/2021/05/04/re2/1565360175669.png" alt="1565360175669"></p><p>IDA直接看</p><p><img src="https://wx3.sinaimg.cn/mw1024/007juUiNly1gq6gxuh031j30nd0i80tq.jpg" alt="img"></p><p>F5</p><p><img src="https://wx4.sinaimg.cn/mw1024/007juUiNly1gq6gxuge37j30iq0gaaak.jpg" alt="img"></p><p>看到 <strong>strcmp()</strong> 函数，输入的是v9，和v5比较，所以数据就应该在v5里面，再看第10行，把<strong>xmmword_413E34</strong>的值赋给v5，所以双击<strong>xmmword_413E34</strong>看它的数据。把<strong>qword_413E44</strong>和<strong>xmmword_413E34</strong>的数据拼起来</p><p><img src="https://wx4.sinaimg.cn/mw1024/007juUiNly1gq6gxujeoxj30p80itmyk.jpg" alt="img"></p><p>按A直接得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;re1&quot;&gt;&lt;a href=&quot;#re1&quot; class=&quot;headerlink&quot; title=&quot;re1&quot;&gt;&lt;/a&gt;re1&lt;/h2&gt;&lt;p&gt;双击点开，让我输入flag&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2021/05/04/re2/1565360175669.png&quot; </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>PE 文件 —— 区块表</title>
    <link href="http://example.com/2021/05/04/pe%20(2)/"/>
    <id>http://example.com/2021/05/04/pe%20(2)/</id>
    <published>2021-05-04T08:21:38.000Z</published>
    <updated>2021-05-16T10:03:25.620Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前述"><a href="#前述" class="headerlink" title="前述"></a>前述</h2><p>在 NT 头结束后，紧接着就是区块表，区块表包含每个块在映象中的信息，分别指向不同的区块实体。</p><h2 id="区块表"><a href="#区块表" class="headerlink" title="区块表"></a>区块表</h2><p>区块表是一个 IMAGE_SECTION_HEADER 结构数组，这个结构包含区块的信息，比如位置、长度、属性等，区块的数目是由 NT 头中的文件头里的 NumberOfSections 给出。以下为 IMAGE_SECTION_HEADER 结构：</p><p><img src="https://xxx.ilovefishc.com/forum/201812/24/152750rzsnk49xzic4fc3k.png" alt="img"></p><p>在上述图中，有两个字段比较重要，分别为 VirtualAddress、PointerToRawData，这两个字段用于将相对虚拟地址或虚拟地址转换为文件偏移地址，以下为 RVA 转 FOA 函数：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> // RVA 转 FOA</span><br><span class="line"><span class="bullet">2.</span> DWORD RVAtoFOA(DWORD dwRva)</span><br><span class="line"><span class="bullet">3.</span> &#123;</span><br><span class="line"><span class="bullet">4.</span>   // 获取区段表的数量</span><br><span class="line"><span class="bullet">5.</span>   DWORD dwCounts = g<span class="emphasis">_NtHeader-&gt;FileHeader.NumberOfSections;</span></span><br><span class="line"><span class="emphasis">6. </span></span><br><span class="line"><span class="emphasis">7.   // 获取区段表数组的首元素</span></span><br><span class="line"><span class="emphasis">8.   auto Sections = IMAGE_</span>FIRST<span class="emphasis">_SECTION(g_</span>NtHeader);</span><br><span class="line"><span class="bullet">9.</span> </span><br><span class="line"><span class="bullet">10.</span>   // 遍历所有的区段表找到符合要求的区段</span><br><span class="line"><span class="bullet">11.</span>   for (DWORD i = 0; i &lt; dwCounts; ++i)</span><br><span class="line"><span class="bullet">12.</span>   &#123;</span><br><span class="line"><span class="bullet">13.</span> ​     // 要求：RVA &gt;= 区段的首地址 并且 RVA &lt; 区段的结尾的地址</span><br><span class="line"><span class="bullet">14.</span> ​     if (dwRva &gt;= Sections[i].VirtualAddress &amp;&amp;</span><br><span class="line"><span class="bullet">15.</span> ​        dwRva &lt; (Sections[i].VirtualAddress + Sections[i].SizeOfRawData))</span><br><span class="line"><span class="bullet">16.</span> ​     &#123;</span><br><span class="line"><span class="bullet">17.</span> ​        // FOA = VA - ImageBase - （所在区段的 RVA - 所在区段的 FOA）</span><br><span class="line"><span class="bullet">18.</span> ​        // FOA = RVA - 所在区段的 RVA + 所在区段的 FOA</span><br><span class="line"><span class="bullet">19.</span> ​        return dwRva - Sections[i].VirtualAddress + Sections[i].PointerToRawData;</span><br><span class="line"><span class="bullet">20.</span> ​     &#125;</span><br><span class="line"><span class="bullet">21.</span>   &#125;</span><br><span class="line"><span class="bullet">22.</span> </span><br><span class="line"><span class="bullet">23.</span>   // 如果找不到就返回 -1</span><br><span class="line"><span class="bullet">24.</span>   return -1;</span><br><span class="line"><span class="bullet">25.</span> &#125;</span><br></pre></td></tr></table></figure><p>计算公式为：FOA = VA - ImageBase - (所在区段的 RVA - 所在区段的 FOA) 或 FOA = RVA - 所在区段的 RVA + 所在区段的 FOA。</p><p>在上述代码中，有一个为 IMAGE_FIRST_SECTION，我们来看下它的定义，如下：</p><p><img src="https://xxx.ilovefishc.com/forum/201812/24/152838k3ppyv1n1w2y3vjj.png" alt="img"></p><p>其实 IMAGE_FIRST_SECTION 为一个宏，它主要由三部分相加组成，作用是获取到第一个区段的首地址，参数为 NT 头。你可以把这个首地址理解成数组名，数组的首地址。在获取到了地址后，下面的 for 循环遍历所有的区段表找到符合要求的区段。这三部分内容具体如下：</p><ul><li>IMAGE_NT_HEADERS 的起始地址</li><li>IMAGE_OPTIONAL_HEADER32 （PE 扩展头）在 IMAGE_NT_HEADERS 中的偏移</li><li>IMAGE_OPTIONAL_HEADER32 的大小</li></ul><p>其中后两个加起来的大小恰好就是 IMAGE_NT_HEADERS 的大小，再跟第一个相加就得到区段表的地址了。看到这你可以会问，为什么不直接加上 IMAGE_NT_HEADERS 的大小呢？因为 IMAGE_OPTIONAL_HEADER32 大小不固定，32 位下该值为 0x00E0H，64 位下该值为 0x00F0H，并且用户还可以自定义其大小。</p><h2 id="额外说明"><a href="#额外说明" class="headerlink" title="额外说明"></a>额外说明</h2><p>扩展头大小是由文件头中 SizeOfOptionalHeader 字段给出，FIELD_OFFSET 这个是给出 OptionalHeader 在 IMAGE_NT_HEADERS 结构中的偏移，如下：</p><p><img src="https://xxx.ilovefishc.com/forum/201812/24/152910udjjjs8rdg8pcqq8.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前述&quot;&gt;&lt;a href=&quot;#前述&quot; class=&quot;headerlink&quot; title=&quot;前述&quot;&gt;&lt;/a&gt;前述&lt;/h2&gt;&lt;p&gt;在 NT 头结束后，紧接着就是区块表，区块表包含每个块在映象中的信息，分别指向不同的区块实体。&lt;/p&gt;
&lt;h2 id=&quot;区块表&quot;&gt;&lt;a hr</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>攻防世界re1</title>
    <link href="http://example.com/2021/05/04/re1/"/>
    <id>http://example.com/2021/05/04/re1/</id>
    <published>2021-05-04T08:03:47.000Z</published>
    <updated>2021-05-24T15:23:46.503Z</updated>
    
    <content type="html"><![CDATA[<h2 id="game"><a href="#game" class="headerlink" title="game"></a><strong>game</strong></h2><p><img src="/2021/05/04/re1/007juUiNly1gq6gkek1wqj30xe0grmxo.jpg" alt="img"></p><p>打开程序显示一些符号，让你玩游戏，赢了就有flag</p><p>用OD打开，搜素字符串，找到flag的定位</p><p><img src="/2021/05/04/re1/007juUiNly1gq6gken485j30sa0daq4l.jpg" alt="img"></p><p>运行到这里，运行这个函数，就可以得到flag</p><p>IDA</p><p>放进IDA，找到main函数</p><p><img src="/2021/05/04/re1/007juUiNly1gq6gkek7k3j30d20ft74l.jpg" alt="img"></p><p>进入sub_457AB4()</p><p><img src="/2021/05/04/re1/007juUiNly1gq6gkemtnij30b30iqt93.jpg" alt="img"></p><p>写个脚本运行</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">arr1</span> =<span class="meta"> [18, 64, 98, 5, 2, 4, 6, 3, 6, 48, 49, 65, 32, 12, 48, 65, 31, 78, 62, 32, 49, 32,</span></span><br><span class="line"><span class="meta">        1, 57, 96, 3, 21, 9, 4, 62, 3, 5, 4, 1, 2, 3, 44, 65, 78, 32, 16, 97, 54, 16, 44,</span></span><br><span class="line"><span class="meta">        52, 32, 64, 89, 45, 32, 65, 15, 34, 18, 16, 0]</span></span><br><span class="line"><span class="attribute">arr2</span> =<span class="meta"> [123, 32, 18, 98, 119, 108, 65, 41, 124, 80, 125, 38, 124, 111, 74, 49,</span></span><br><span class="line"><span class="meta">        83, 108, 94, 108, 84, 6, 96, 83, 44, 121, 104, 110, 32, 95, 117, 101, 99,</span></span><br><span class="line"><span class="meta">        123, 127, 119, 96, 48, 107, 71, 92, 29, 81, 107, 90, 85, 64, 12, 43, 76, 86,</span></span><br><span class="line"><span class="meta">        13, 114, 1, 117, 126, 0]</span></span><br><span class="line"><span class="attribute">str</span>=&#x27;&#x27;</span><br><span class="line"><span class="attribute">for</span> i in range(<span class="number">0</span>,<span class="number">56</span>):</span><br><span class="line">    <span class="attribute">arr2</span>[i] ^= arr<span class="number">1</span>[i]</span><br><span class="line">    <span class="attribute">arr2</span>[i] ^= <span class="number">0</span>x<span class="number">13</span></span><br><span class="line">    <span class="attribute">str</span> =str + chr(arr<span class="number">2</span>[i]);</span><br><span class="line"></span><br><span class="line"><span class="attribute">print</span>(str)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2021/05/04/re1/007juUiNly1gq6gkejmp9j30gy025t8k.jpg" alt="img"></p><h2 id="Hello，CTF"><a href="#Hello，CTF" class="headerlink" title="Hello，CTF"></a><strong>Hello，CTF</strong></h2><p>一个exe，运行结果如下：</p><p><img src="/2021/05/04/re1/1567821831010.png" alt="1567821831010"></p><p>IDA找到main函数</p><p><img src="/2021/05/04/re1/007juUiNly1gq6gkey9isj30jt0ikjs3.jpg" alt="img"></p><p>a键直接的到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;game&quot;&gt;&lt;a href=&quot;#game&quot; class=&quot;headerlink&quot; title=&quot;game&quot;&gt;&lt;/a&gt;&lt;strong&gt;game&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2021/05/04/re1/007juUiNly1gq6gkek1</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>PE文件</title>
    <link href="http://example.com/2021/04/27/PE/"/>
    <id>http://example.com/2021/04/27/PE/</id>
    <published>2021-04-27T11:48:38.000Z</published>
    <updated>2021-05-24T15:42:21.276Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PE文件"><a href="#PE文件" class="headerlink" title="PE文件"></a>PE文件</h1><p>PE文件的全称是Portable Executable，意为可移植的可执行的文件，常见的EXE、DLL、OCX、SYS、COM都是PE文件，PE文件是微软Windows操作系统上的程序文件</p><p>PE文件是指32位可执行文件，也称为PE32。64位的可执行文件称为PE+或PE32+,是PE(PE32)的一种扩展形式</p><p>而不是PE64</p><h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><p>网上找了个图</p><p><img src="/2021/04/27/PE/5b49c771e2fd3.jpg" alt="image"></p><p>PE文件结构分为五个部分：</p><ul><li>DOS文件头</li><li>DOS加载模块</li><li>PE文件头</li><li>区段表</li><li>区段</li></ul><h2 id="Dos头"><a href="#Dos头" class="headerlink" title="Dos头"></a>Dos头</h2><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">定义</span><br><span class="line"></span><br><span class="line">typedef struct _IMAGE_DOS_HEADER &#123;      // <span class="type">DOS</span> .<span class="type">EXE</span> header  </span><br><span class="line">    <span class="type">WORD</span>   e_magic;                     // <span class="type">Magic</span> number  </span><br><span class="line">    <span class="type">WORD</span>   e_cblp;                      // <span class="type">Bytes</span> on last page of file  </span><br><span class="line">    <span class="type">WORD</span>   e_cp;                        // <span class="type">Pages</span> in file  </span><br><span class="line">    <span class="type">WORD</span>   e_crlc;                      // <span class="type">Relocations</span>  </span><br><span class="line">    <span class="type">WORD</span>   e_cparhdr;                   // <span class="type">Size</span> of header in paragraphs  </span><br><span class="line">    <span class="type">WORD</span>   e_minalloc;                  // <span class="type">Minimum</span> extra paragraphs needed  </span><br><span class="line">    <span class="type">WORD</span>   e_maxalloc;                  // <span class="type">Maximum</span> extra paragraphs needed  </span><br><span class="line">    <span class="type">WORD</span>   e_ss;                        // <span class="type">Initial</span> (relative) <span class="type">SS</span> value  </span><br><span class="line">    <span class="type">WORD</span>   e_sp;                        // <span class="type">Initial</span> <span class="type">SP</span> value  </span><br><span class="line">    <span class="type">WORD</span>   e_csum;                      // <span class="type">Checksum</span>  </span><br><span class="line">    <span class="type">WORD</span>   e_ip;                        // <span class="type">Initial</span> <span class="type">IP</span> value  </span><br><span class="line">    <span class="type">WORD</span>   e_cs;                        // <span class="type">Initial</span> (relative) <span class="type">CS</span> value  </span><br><span class="line">    <span class="type">WORD</span>   e_lfarlc;                    // <span class="type">File</span> address of relocation table  </span><br><span class="line">    <span class="type">WORD</span>   e_ovno;                      // <span class="type">Overlay</span> number  </span><br><span class="line">    <span class="type">WORD</span>   e_res[4];                    // <span class="type">Reserved</span> words  </span><br><span class="line">    <span class="type">WORD</span>   e_oemid;                     // <span class="type">OEM</span> identifier (for e_oeminfo)  </span><br><span class="line">    <span class="type">WORD</span>   e_oeminfo;                   // <span class="type">OEM</span> information; e_oemid specific  </span><br><span class="line">    <span class="type">WORD</span>   e_res2[10];                  // <span class="type">Reserved</span> words  </span><br><span class="line">    <span class="type">LONG</span>   e_lfanew;                    // <span class="type">File</span> address of new exe header  </span><br><span class="line">  &#125; <span class="type">IMAGE_DOS_HEADER</span>, *<span class="type">PIMAGE_DOS_HEADER</span>;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们只需要关注两个域：</p><p>e_magic：一个WORD类型，值是一个常数0x4D5A，用文本编辑器查看该值位‘MZ’，可执行文件必须都是’MZ’开头。</p><p>e_lfanew：为32位可执行文件扩展的域，用来表示DOS头之后的NT头相对文件起始地址的偏移。</p><p>Dos头的特征是4D5A也就是MZ开头。这里面比较有用的信息是最后两个字节（Dos头只有64字节）。</p><p><img src="/2021/04/27/PE/007juUiNly1gpyjxe25i6j30vz0iuhdt.jpg" alt="img"></p><h2 id="PE头"><a href="#PE头" class="headerlink" title="PE头"></a><strong>PE头</strong></h2><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">定义</span><br><span class="line">typedef struct _IMAGE_NT_HEADERS &#123;  </span><br><span class="line">    <span class="type">DWORD</span> <span class="type">Signature</span>;  </span><br><span class="line">    <span class="type">IMAGE_FILE_HEADER</span> <span class="type">FileHeader</span>;  </span><br><span class="line">    <span class="type">IMAGE_OPTIONAL_HEADER32</span> <span class="type">OptionalHeader</span>;  </span><br><span class="line">&#125; <span class="type">IMAGE_NT_HEADERS32</span>, *<span class="type">PIMAGE_NT_HEADERS32</span>;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PE文件头分为三个结构，第一个为签名字段，第二个为文件头字段，第三个为可选头字段。</p><p>Signature：在一个PE文件中Signature字段被设置为4550h,ASCII码为”PE00“。</p><p>IMAGE_FILE_HEADER是PE文件头</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">typedefstruct_IMAGE_OPTIONAL_HEADER</span><br><span class="line">&#123;</span><br><span class="line"> WORD Magic;<span class="regexp">//</span> 标志字, ROM 映像（<span class="number">0107</span>h）,普通可执行文件（<span class="number">010</span>Bh）</span><br><span class="line"> BYTE MajorLinkerVersion;<span class="regexp">//</span> 链接程序的主版本号</span><br><span class="line"> BYTE MinorLinkerVersion;<span class="regexp">//</span> 链接程序的次版本号</span><br><span class="line"> DWORD SizeOfCode;<span class="regexp">//</span> 所有含代码的节的总大小</span><br><span class="line"> DWORD SizeOfInitializedData;<span class="regexp">//</span> 所有含已初始化数据的节的总大小</span><br><span class="line"> DWORD SizeOfUninitializedData;<span class="regexp">//</span> 所有含未初始化数据的节的大小</span><br><span class="line"> DWORD AddressOfEntryPoint;<span class="regexp">//</span> 程序执行入口RVA</span><br><span class="line"> DWORD BaseOfCode;<span class="regexp">//</span> 代码的区块的起始RVA</span><br><span class="line"> DWORD BaseOfData;<span class="regexp">//</span> 数据的区块的起始RVA</span><br><span class="line"><span class="regexp">//</span></span><br><span class="line"><span class="regexp">//</span> NT additional fields. 以下是属于NT结构增加的领域。</span><br><span class="line"><span class="regexp">//</span></span><br><span class="line"> DWORD ImageBase;<span class="regexp">//</span> 程序的首选装载地址</span><br><span class="line"> DWORD SectionAlignment;<span class="regexp">//</span> 内存中的区块的对齐大小</span><br><span class="line"> DWORD FileAlignment;<span class="regexp">//</span> 文件中的区块的对齐大小</span><br><span class="line"> WORD MajorOperatingSystemVersion;<span class="regexp">//</span> 要求操作系统最低版本号的主版本号</span><br><span class="line"> WORD MinorOperatingSystemVersion;<span class="regexp">//</span> 要求操作系统最低版本号的副版本号</span><br><span class="line"> WORD MajorImageVersion;<span class="regexp">//</span> 可运行于操作系统的主版本号</span><br><span class="line"> WORD MinorImageVersion;<span class="regexp">//</span> 可运行于操作系统的次版本号</span><br><span class="line"> WORD MajorSubsystemVersion;<span class="regexp">//</span> 要求最低子系统版本的主版本号</span><br><span class="line"> WORD MinorSubsystemVersion;<span class="regexp">//</span> 要求最低子系统版本的次版本号</span><br><span class="line"> DWORD Win32VersionValue;<span class="regexp">//</span> 莫须有字段，不被病毒利用的话一般为<span class="number">0</span></span><br><span class="line"> DWORD SizeOfImage;<span class="regexp">//</span> 映像装入内存后的总尺寸</span><br><span class="line"> DWORD SizeOfHeaders;<span class="regexp">//</span> 所有头 + 区块表的尺寸大小</span><br><span class="line"> DWORD CheckSum;<span class="regexp">//</span> 映像的校检和</span><br><span class="line"> WORD Subsystem;<span class="regexp">//</span> 可执行文件期望的子系统</span><br><span class="line"> WORD DllCharacteristics;<span class="regexp">//</span> DllMain()函数何时被调用，默认为 <span class="number">0</span></span><br><span class="line"> DWORD SizeOfStackReserve;<span class="regexp">//</span> 初始化时的栈大小</span><br><span class="line"> DWORD SizeOfStackCommit;<span class="regexp">//</span> 初始化时实际提交的栈大小</span><br><span class="line"> DWORD SizeOfHeapReserve;<span class="regexp">//</span> 初始化时保留的堆大小</span><br><span class="line"> DWORD SizeOfHeapCommit;<span class="regexp">//</span> 初始化时实际提交的堆大小</span><br><span class="line"> DWORD LoaderFlags;<span class="regexp">//</span> 与调试有关，默认为 <span class="number">0</span></span><br><span class="line"> DWORD NumberOfRvaAndSizes;<span class="regexp">//</span> 下边数据目录的项数，这个字段自Windows NT 发布以来一直是<span class="number">16</span></span><br><span class="line"> IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES];</span><br><span class="line"><span class="regexp">//</span> 数据目录表</span><br><span class="line">&#125; IMAGE_OPTIONAL_HEADER32, *PIMAGE_OPTIONAL_HEADER32;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id><a href="#" class="headerlink" title></a></h2><h2 id="区段表"><a href="#区段表" class="headerlink" title="区段表"></a>区段表</h2><p>区段表分为.text表、.data表、.rsrc表，区段表相当于区段的目录，里面包含着每个区段的信息，如区段名称、区段大小、区段基地址、区段偏移地址等。</p><p><img src="/2021/04/27/PE/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODc0OTMw,size_16,color_FFFFFF,t_70" alt="img"></p><p>.text：代码段，是在编译或汇编结束时产生的一种块，它的内容全部是指令代码。也有的编译器将该段命名为.code<br>.data：初始化的数据块，是初始化的数据块，包含那些编译时被初始化的变量、字符串<br>.idata：输入表，包含其他外来dll的函数和数据信息，也就是输入表，也有人称之为导入表。<br>.rsrc：资源数据块，包含模块的全部资源数据，如图标、菜单、位图等。<br>.reloc：重定位表，用于保存基址的重定位表。即当装在程序不能按照连接器所指定的地址装载文件是，需要对指令或已经初始化的变量进行调整，该块中也包含了调整过程中所需要的一些数据，如果装载能够正常装在则忽略此段中的数据。<br>.edata：导出表，是pe文件的输出表，以供其他模块使用，并不是每个pe文件都有此数据段，因为有的文件并不需要输出一些函数，该数据段常见于动态连接库文件中。<br>.radata：存放调试目录、说明字符串，该数据块并不常见主要是用于存放一些调试信息。</p><h2 id="区段"><a href="#区段" class="headerlink" title="区段"></a>区段</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;PE文件&quot;&gt;&lt;a href=&quot;#PE文件&quot; class=&quot;headerlink&quot; title=&quot;PE文件&quot;&gt;&lt;/a&gt;PE文件&lt;/h1&gt;&lt;p&gt;PE文件的全称是Portable Executable，意为可移植的可执行的文件，常见的EXE、DLL、OCX、SYS、CO</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>攻防世界misc-3</title>
    <link href="http://example.com/2021/04/19/drf/"/>
    <id>http://example.com/2021/04/19/drf/</id>
    <published>2021-04-19T13:05:16.000Z</published>
    <updated>2021-05-24T15:43:15.720Z</updated>
    
    <content type="html"><![CDATA[<h2 id="base64÷4"><a href="#base64÷4" class="headerlink" title="base64÷4"></a>base64÷4</h2><p><img src="/2021/04/19/drf/007juUiNly1gppcu2jwr5j30qd011jr7.jpg" alt="img"></p><p>得到一串码 直接丢进cy</p><p><img src="/2021/04/19/drf/007juUiNly1gppcu2nzhmj30na0e5glo.jpg" alt="img"></p><h2 id="something-in-image"><a href="#something-in-image" class="headerlink" title="something_in_image"></a>something_in_image</h2><p>直接010打开得到flag</p><h2 id="wireshark-1"><a href="#wireshark-1" class="headerlink" title="wireshark-1"></a>wireshark-1</h2><p>下下来一个装有流量包的zip文件  wireshark打开流量包</p><p>搜索flag<img src="/2021/04/19/drf/007juUiNly1gppcu2id30j309l04sdfs.jpg" alt="img"></p><p>得到</p><h2 id="pure-color"><a href="#pure-color" class="headerlink" title="pure_color"></a>pure_color</h2><p>得到一个全空白的图片</p><p>用stegsolve看看</p><p><img src="/2021/04/19/drf/007juUiNly1gppcu2omznj30st09u3yo.jpg" alt="img"></p><p>得到flag</p><h2 id="Aesop-secret"><a href="#Aesop-secret" class="headerlink" title="Aesop_secret"></a>Aesop_secret</h2><p>下下来一个gif ps打开得到<code>ISCC</code>，尝试下不是flag</p><p>010打开</p><p><img src="/2021/04/19/drf/007juUiNly1gppcu2rq7hj307907w3yk.jpg" alt="img"></p><p>在最后得到一段字段</p><p>AES解密 密码是ISCC</p><p><img src="/2021/04/19/drf/007juUiNly1gppcu2ormbj30uj0bk0tj.jpg" alt="img"></p><p><img src="/2021/04/19/drf/007juUiNly1gppcu2wwaoj30sf0d1wf4.jpg" alt="img"></p><h2 id="a-good-idea"><a href="#a-good-idea" class="headerlink" title="a_good_idea"></a>a_good_idea</h2><p>用010打开，看下来发现有点长，一个有两个文件，在text里面看到PK，这不是有zip,直接把前面的都删掉，得到一个zip</p><p><img src="/2021/04/19/drf/007juUiNly1gppcu2wao8j30ks0er75x.jpg" alt="img"></p><p><img src="/2021/04/19/drf/007juUiNly1gppcu3ab23j30wv0it77w.jpg" alt="img"></p><p>还有两张图片，猜测应该用stegsolve合并，然后用ps调色</p><p><img src="/2021/04/19/drf/007juUiNly1gppcu2z3ijj30c009jq3o.jpg" alt="img"></p><p>用QR解二维码得到flag</p><h2 id="Training-Stegano-1"><a href="#Training-Stegano-1" class="headerlink" title="Training-Stegano-1"></a>Training-Stegano-1</h2><p><img src="https://wx2.sinaimg.cn/mw690/007juUiNly1gppcu336ccj30ox02mglk.jpg" alt="img"></p><p>直接记事本打开，直接得到flag</p><h2 id="can-has-stdio"><a href="#can-has-stdio" class="headerlink" title="can_has_stdio?"></a>can_has_stdio?</h2><p><img src="/2021/04/19/drf/007juUiNly1gppcu34dc6j318a0m8glv.jpg" alt="img"></p><p>五角星，有几个字符</p><p>百度知道是brainfuck语言</p><p>解密网站<a href="https://tool.bugku.com/brainfuck/?wafcloud=2">https://tool.bugku.com/brainfuck/?wafcloud=2</a></p><p><img src="/2021/04/19/drf/007juUiNly1gppcu34kfjj30fp06vq2t.jpg" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;base64÷4&quot;&gt;&lt;a href=&quot;#base64÷4&quot; class=&quot;headerlink&quot; title=&quot;base64÷4&quot;&gt;&lt;/a&gt;base64÷4&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2021/04/19/drf/007juUiNly1gppcu2jwr</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>攻防世界misc-2</title>
    <link href="http://example.com/2021/04/19/wer/"/>
    <id>http://example.com/2021/04/19/wer/</id>
    <published>2021-04-19T12:34:48.000Z</published>
    <updated>2021-05-24T15:42:33.221Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SimpleRAR"><a href="#SimpleRAR" class="headerlink" title="SimpleRAR"></a>SimpleRAR</h2><p>下载下来一个rar</p><p>但是解压报错</p><p>打开010看看</p><p><img src="/2021/04/19/wer/007juUiNly1gppc3a2zt0j30j6078t9b.jpg" alt="img"></p><p>png是文件块，应该用74，但这里是7A，变成子块了</p><p>然后可以解压，里面有个图片，无法显示</p><p>010打开</p><p><img src="/2021/04/19/wer/007juUiNly1gppc3a3v8cj30jp06fq3f.jpg" alt="img"></p><p>是gif文件，修改后缀打开，用stegsolve看，发现一半的二维码</p><p><img src="/2021/04/19/wer/007juUiNly1gppc3a25lcj308604ka9x.jpg" alt="img"></p><p>ps打开的时候有两个图层</p><p><img src="/2021/04/19/wer/007juUiNly1gppc3a2mcrj3083057gll.jpg" alt="img"></p><p>合并</p><p><img src="/2021/04/19/wer/007juUiNly1gppc3a844dj308107ua9x.jpg" alt="img"></p><p>用QR打开</p><p><img src="/2021/04/19/wer/007juUiNly1gppc3aomafj30hv0jdgog.jpg" alt="img"></p><p>得到flag</p><h2 id="功夫再高也怕菜刀"><a href="#功夫再高也怕菜刀" class="headerlink" title="功夫再高也怕菜刀"></a>功夫再高也怕菜刀</h2><p>下下来一个pcapng文件 这应该是个流量文件 wireshark搜索flag</p><p><img src="/2021/04/19/wer/007juUiNly1gppc3auep2j30o40mtgna.jpg" alt="img"></p><p>发现上面还有一个666的jpg图片</p><p>1150追踪流TCP</p><p><img src="/2021/04/19/wer/007juUiNly1gppc3bl0sfj30yb0otwhr.jpg" alt="img"></p><p><img src="/2021/04/19/wer/007juUiNly1gppc3avtmaj30x20e7761.jpg" alt="img"></p><p><img src="/2021/04/19/wer/007juUiNly1gppc3aseg6j30y30hptaz.jpg" alt="img"></p><p>从FFD8到FFD9</p><p>复制进010，新建一个文件，编辑里面粘贴HEX TEXT</p><p><img src="/2021/04/19/wer/007juUiNly1gppc3bd5mdj30jt0dan95.jpg" alt="img"></p><p>应该是密码之类的，剩下就剩文件分离，用foremost分离出一个文件，用密码得到flag</p><p><img src="/2021/04/19/wer/007juUiNly1gppc3b0l4xj308l010745.jpg" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;SimpleRAR&quot;&gt;&lt;a href=&quot;#SimpleRAR&quot; class=&quot;headerlink&quot; title=&quot;SimpleRAR&quot;&gt;&lt;/a&gt;SimpleRAR&lt;/h2&gt;&lt;p&gt;下载下来一个rar&lt;/p&gt;
&lt;p&gt;但是解压报错&lt;/p&gt;
&lt;p&gt;打开010看看&lt;/p&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>攻防世界misc</title>
    <link href="http://example.com/2021/04/14/daj/"/>
    <id>http://example.com/2021/04/14/daj/</id>
    <published>2021-04-14T13:17:00.000Z</published>
    <updated>2021-05-24T15:43:41.446Z</updated>
    
    <content type="html"><![CDATA[<h2 id="pdf"><a href="#pdf" class="headerlink" title="pdf"></a>pdf</h2><p>一张图片，flag被图片遮住，直接选中就可以了</p><h2 id="如来十三掌"><a href="#如来十三掌" class="headerlink" title="如来十三掌"></a>如来十三掌</h2><p>看到这一大段就知道是神奇的文字，看了wp后知道是一种特殊的</p><p>要用<strong>与佛论禅</strong><a href="http://www.keyfc.net/bbs/tools/tudoucode.aspx">http://www.keyfc.net/bbs/tools/tudoucode.aspx</a></p><p><img src="https://wx1.sinaimg.cn/thumb300/007juUiNly1gpkimj0snkj30r80hvjrw.jpg" alt="img"></p><p>得到一串码，丢进CyberChef直接得到flag</p><h2 id="give-you-flag"><a href="#give-you-flag" class="headerlink" title="give_you_flag"></a>give_you_flag</h2><p>题目没有什么可以值得注意的提示，，我们下载附件，发现是个gif文件，先打开看看，，之后发现了个貌似二维码的东西一闪而过，，所以我们分解它，，打开我们的神器StegSolve进行逐帧分析</p><p><img src="https://wx2.sinaimg.cn/mw1024/007juUiNly1gpkimj2wgnj304t05h0ss.jpg" alt="img"></p><p>在50帧得到了一个残缺的二维码，利用ps修复，扫码得到flag或者CQR</p><h2 id="坚持60s"><a href="#坚持60s" class="headerlink" title="坚持60s"></a>坚持60s</h2><p><img src="https://img-blog.csdnimg.cn/20200430170432330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjA0NzM4Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><p>这一看就知道不能玩</p><p>直接java的反编译工具 java decompiler</p><p><img src="https://wx4.sinaimg.cn/mw1024/007juUiNly1gpkimj5g8nj30hp0h50ta.jpg" alt="img"></p><p>在里面文件找到flag</p><h2 id="gif"><a href="#gif" class="headerlink" title="gif"></a>gif</h2><p>让我们下载附件，，是个压缩包，解压后，有两个文件夹，，我们根据题目提示，打开gif的那个</p><p><img src="https://wx2.sinaimg.cn/mw1024/007juUiNly1gpkimj5rgvj30r30kzmxk.jpg" alt="img"></p><p>一片混乱，但是都是黑白的</p><p>二进制0和1.其实可以猜到，0是白色，1是黑色。所以我们把所有图转换为二进制得到如下。01100110011011000110000101100111011110110100011001110101010011100101111101100111011010010100011001111101</p><p>CyberChef直接得到flag</p><h1 id="stegano"><a href="#stegano" class="headerlink" title="stegano"></a>stegano</h1><p>一个pdf都是没有用的东西，复制进txt,得到</p><p><img src="https://wx4.sinaimg.cn/mw1024/007juUiNly1gpkimj5j1hj30qj0d7aa2.jpg" alt="img"></p><p>想到摩斯密码，将A替换为.，B替换为-</p><p><img src="https://wx1.sinaimg.cn/mw1024/007juUiNly1gpkil8dw3xj30x001hjr7.jpg" alt="img"></p><p>运用脚本</p><p><img src="https://wx4.sinaimg.cn/mw1024/007juUiNly1gpkil8fwioj30hc02qmx3.jpg" alt="img"></p><p>得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;pdf&quot;&gt;&lt;a href=&quot;#pdf&quot; class=&quot;headerlink&quot; title=&quot;pdf&quot;&gt;&lt;/a&gt;pdf&lt;/h2&gt;&lt;p&gt;一张图片，flag被图片遮住，直接选中就可以了&lt;/p&gt;
&lt;h2 id=&quot;如来十三掌&quot;&gt;&lt;a href=&quot;#如来十三掌&quot; class=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>隐写术</title>
    <link href="http://example.com/2021/04/04/yingxie/"/>
    <id>http://example.com/2021/04/04/yingxie/</id>
    <published>2021-04-04T14:53:19.000Z</published>
    <updated>2021-05-24T15:51:54.481Z</updated>
    
    <content type="html"><![CDATA[<p>隐写术，顾名思义就是讲需要传达的信心隐藏在各种载体上（数据流，压缩包，图片，音频等）也是一种手段。现代的数字水印技术就是从这方面发展而来的，数字水印技术在现在社会中越来越种重视版权这一方向的加持下发展的越来越好。</p><h2 id="一、常见文件头文件尾"><a href="#一、常见文件头文件尾" class="headerlink" title="一、常见文件头文件尾"></a>一、常见文件头文件尾</h2><p>1、图片<br>JPEG<br><strong>文件头：FF D8 FF</strong>　　　　　<br><strong>文件尾：FF D9</strong><br>TGA<br><strong>未压缩的前4字节 00 00 02 00</strong><br><strong>RLE压缩的前5字节 00 00 10 00 00</strong><br>PNG<br><strong>文件头：89 50 4E 47 0D 0A 1A 0A</strong>　　　　<br><strong>文件尾：AE 42 60 82</strong><br>GIF<br><strong>文件头：47 49 46 38 39(37) 61</strong>　　　　<br><strong>文件尾：00 3B</strong><br>BMP<br><strong>文件头：42 4D</strong><br><strong>文件头标识(2 bytes) 42(B) 4D(M)</strong><br>TIFF (tif)<br><strong>文件头：49 49 2A 00</strong><br>ico<br><strong>文件头：00 00 01 00</strong><br>Adobe Photoshop (psd)<br><strong>文件头：38 42 50 53</strong><br>2、office文件<br>MS Word/Excel (xls.or.doc)<br><strong>文件头：D0 CF 11 E0</strong></p><p>MS Access (mdb)<br><strong>文件头：53 74 61 6E 64 61 72 64 20 4A</strong></p><p>WordPerfect (wpd)<br><strong>文件头：FF 57 50 43</strong></p><p>Adobe Acrobat (pdf)<br><strong>文件头：25 50 44 46 2D 31 2E</strong></p><p>application/vnd.visio(vsd)<br><strong>文件头：D0 CF 11 E0 A1 B1 1A E1</strong></p><p>Email [thorough only] (eml)<br><strong>文件头：44 65 6C 69 76 65 72 79 2D 64 61 74 65 3A</strong></p><p>Outlook Express (dbx)<br><strong>文件头：CF AD 12 FE C5 FD 74 6F</strong></p><p>Outlook (pst)<br><strong>文件头：21 42 44 4E</strong></p><p>Rich Text Format (rtf)<br><strong>文件头：7B 5C 72 74 66</strong></p><p>txt 文件(txt)<br><strong>文件头：Unicode：FE FF / Unicode big endian：FF FE / UTF-8：EF BB BF /ANSI编码是没有文件头的</strong></p><p>3、压缩包文件<br>ZIP Archive (zip)<br><strong>文件头：50 4B 03 04</strong><br><strong>文件尾：50 4B</strong><br>RAR Archive (rar)<br><strong>文件头：52 61 72 21</strong><br>4、音频文件<br>Wave (wav)<br><strong>文件头：57 41 56 45</strong><br>audio(Audio)<br><strong>文件头： 4D 54 68 64</strong><br>audio/x-aac（aac）<br><strong>文件头：FF F1(9)</strong><br>5、视频文件<br>AVI (avi)<br><strong>文件头：41 56 49 20</strong><br>Real Audio (ram)<br><strong>文件头：2E 72 61 FD</strong><br>Real Media (rm)<br><strong>文件头：2E 52 4D 46</strong><br>MPEG (mpg)<br><strong>文件头：00 00 01 BA(3)</strong><br>Quicktime (mov)<br><strong>文件头：6D 6F 6F 76</strong><br>Windows Media (asf)<br><strong>文件头：30 26 B2 75 8E 66 CF 11</strong><br>MIDI (mid)<br><strong>文件头：4D 54 68 64</strong><br>6、代码文件<br>XML (xml)<br><strong>文件头：3C 3F 78 6D 6C</strong></p><p>HTML (html)<br><strong>文件头：68 74 6D 6C 3E</strong></p><p>Quicken (qdf)<br><strong>文件头：AC 9E BD 8F</strong></p><p>Windows Password (pwl)<br><strong>文件头：E3 82 85 96</strong></p><p>7、其他类型<br>windows证书文件(der)<br><strong>文件头：30 82 03 C9</strong><br>CAD (dwg)<br><strong>文件头：41 43 31 30</strong><br>Windows Shortcut (lnk)<br><strong>文件头：4C 00 00 00</strong><br>Windows reg(reg)<br><strong>文件头：52 45 47 45 44 49 54 34</strong></p><h2 id="压缩包类隐写"><a href="#压缩包类隐写" class="headerlink" title="压缩包类隐写"></a>压缩包类隐写</h2><p>这个压缩包是我们日常使用当中经常接触的，常见的格式： .rar .zip .7z（貌似常见就这仨233333）</p><p>压缩包是可以加密的我们都知道，关于怎么解密有几种方法:</p><p><strong>1.爆力破解，俗称爆破，使用对应的暴力破解软件：ziperello, ARCHPR</strong></p><p><strong>2.伪加密：通过修改压缩包的16进制文件中的数据，使压缩包显示有密码</strong></p><p>一格zip文件有三个部分组成：压缩源文件数据区+压缩源文件目录区+压缩源文件目录结束标志 </p><p>这是三个头标记，主要看第二个</p><p>压缩源文件数据区：50 4B 03 04：这是头文件标记</p><p>压缩源文件目录区：</p><p>50 4B 01 02：目录中文件文件头标记</p><p>3F 00：压缩使用的 pkware 版本<br>14 00：解压文件所需 pkware 版本<br>00 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了）</p><h2 id="图片隐写"><a href="#图片隐写" class="headerlink" title="图片隐写"></a>图片隐写</h2><p>1.LSB</p><p>LSB也就是最低有效位 (Least Significant Bit)。原理就是图片中的像数一般是由三种颜色组成，即三原色，由这三种原色可以组成其他各种颜色，例如在PNG图片的储存中，每个颜色会有8bit，LSB隐写就是修改了像数中的最低的1bit，在人眼看来是看不出来区别的，也把信息隐藏起来了。譬如我们想把’A’隐藏进来的话，如下图，就可以把A转成16进制的0x61再转成二进制的01100001，再修改为红色通道的最低位为这些二进制串。</p><p><a href="http://images2015.cnblogs.com/blog/640760/201601/640760-20160129212637693-390049790.png"><img src="/2021/04/04/yingxie/640760-20160129212637693-390049790.png" alt="img"></a></p><p><a href="http://images2015.cnblogs.com/blog/640760/201601/640760-20160129212704114-2030955630.png"><img src="/2021/04/04/yingxie/640760-20160129212704114-2030955630.png" alt="img"></a></p><p>利用Stegsolve这个软件，调整颜色通道</p><p>2.winhex或者010查看</p><p>有的是图片破损修改头部，或者在里面隐藏flag,或者异常IDAT</p><p>3.属性</p><p><img src="/2021/04/04/yingxie/640760-20160129213135802-894172942.png" alt="img"></p><ol start="4"><li>双图</li></ol><p>还有一种情况是比较特殊的，有的时候会给出两张图片，或者是需要你去寻找原来的图片来进行对比寻找隐藏的信息。这个一般是因为一张图片给出来的隐藏信息太过于隐蔽，无法找不到具体的位置，具体的信息。这个时候就要用到一些对比的技巧来查找了。比如ISG2014的misc200就是用到的这种给出了两张图的。有的情况下，第二张图是需要你自己去找到的。</p><p>5.隐藏文件</p><p>用kali自带的binwalk查找是否有隐藏文件，用dd或者foremost分离出文件</p><p>png图片宽高查询脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line">crcbp = <span class="built_in">open</span>(<span class="string">&quot;图片&quot;</span>, <span class="string">&quot;rb&quot;</span>).read()    <span class="comment">#打开图片</span></span><br><span class="line">crc32frombp = <span class="built_in">int</span>(crcbp[<span class="number">29</span>:<span class="number">33</span>].<span class="built_in">hex</span>(),<span class="number">16</span>)  <span class="comment">#读取图片中的CRC校验值</span></span><br><span class="line">print(crc32frombp)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4000</span>):    <span class="comment">#宽度1-4000进行枚举</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4000</span>):   <span class="comment">#高度1-4000进行枚举</span></span><br><span class="line">        data = crcbp[<span class="number">12</span>:<span class="number">16</span>] + \</span><br><span class="line">            struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, i)+struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, j)+crcbp[<span class="number">24</span>:<span class="number">29</span>]</span><br><span class="line">        crc32 = binascii.crc32(data) &amp; <span class="number">0xffffffff</span></span><br><span class="line">        <span class="comment">#print(crc32)</span></span><br><span class="line">        <span class="keyword">if</span>(crc32 == crc32frombp):    <span class="comment">#计算当图片大小为i:j时的CRC校验值，与图片中的CRC比较，当相同，则图片大小已经确定</span></span><br><span class="line">            print(i, j)</span><br><span class="line">            print(<span class="string">&#x27;hex:&#x27;</span>, <span class="built_in">hex</span>(i), <span class="built_in">hex</span>(j))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>后续还有很多需要学习的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;隐写术，顾名思义就是讲需要传达的信心隐藏在各种载体上（数据流，压缩包，图片，音频等）也是一种手段。现代的数字水印技术就是从这方面发展而来的，数字水印技术在现在社会中越来越种重视版权这一方向的加持下发展的越来越好。&lt;/p&gt;
&lt;h2 id=&quot;一、常见文件头文件尾&quot;&gt;&lt;a hre</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>21安恒三月赛misc复现</title>
    <link href="http://example.com/2021/03/30/an/"/>
    <id>http://example.com/2021/03/30/an/</id>
    <published>2021-03-30T14:21:55.000Z</published>
    <updated>2021-05-24T15:43:32.496Z</updated>
    
    <content type="html"><![CDATA[<h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>异世相遇！尽享美味！安恒赛高！</p><p>喊了也不给，还得取关它</p><h3 id="简单的png隐写"><a href="#简单的png隐写" class="headerlink" title="简单的png隐写"></a>简单的png隐写</h3><p>打开后时一个加密的zip，拉到010里面看到头文件后是0900，不是0000</p><p>知道是zip伪加密，把下面4个都改成00就可以了</p><p>打开后有两个图片</p><p><img src="https://wx4.sinaimg.cn/mw690/007juUiNly1gpkj9llt0kj30nr0xcado.jpg" alt="img"></p><p><img src="https://wx1.sinaimg.cn/mw690/007juUiNly1gpkjaswr2vj319y0dhzlz.jpg" alt="img"></p><p>题目说了是png隐写，那当然先看png图片，做的时候查了宽高，试了好多种，没看出来里面有两个图片</p><p><img src="https://wx4.sinaimg.cn/thumb300/007juUiNly1gpkimiwlv2j30kd0f6q42.jpg" alt="img"></p><p>从这里有一个IDAT，什么的数据码本来应该结束了，又来了一些，把前面的一段直接删除，后面就得到了一张新图片</p><p><img src="https://wx2.sinaimg.cn/mw1024/007juUiNly1gpkimilam4j30os09x74o.jpg" alt="img"></p><p>看了大佬的博客知道知道这是outguess隐写，89504E是密钥</p><p>kali下</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">outguess -k <span class="string">&quot;89504E&quot;</span> -r <span class="built_in">flag</span>.jpg <span class="built_in">flag</span>.txt</span><br></pre></td></tr></table></figure><p><img src="https://wx3.sinaimg.cn/mw1024/007juUiNly1gpkimirqnzj30ki0c8q5x.jpg" alt="img"></p><p><img src="https://wx1.sinaimg.cn/mw1024/007juUiNly1gpkimixnv1j30pf02kwei.jpg" alt="img"></p><p>得到一段MUY4QjA4MDg5MTgwNzg1RTAwMDM2NjZDNjE2NzJFNzQ3ODc0MDA0QkNCNDk0Q0FGMzZCMDMwMzQ0RDM1NDlCNjRDMzMzNTMzMzRCMTQ4MzVCNzQ4NEEzNTMzNDg0OTMyMzU0QjRFMzUzMTQ5MzFCNUFDRTVFMjAyMDA0NjhCMjIzRjI4MDAwMDAw</p><p>丢进cyberchef</p><p><img src="https://wx2.sinaimg.cn/mw690/007juUiNly1gpkimizk8ij31690fsq3r.jpg" alt="img"></p><p>得到flag。</p><h3 id="雾都孤儿"><a href="#雾都孤儿" class="headerlink" title="雾都孤儿"></a>雾都孤儿</h3><p>雾都孤儿，确实孤儿，拿到题目时，看着图片没有任何办法，还看了一遍故事</p><p>后面得知要用npite<a href="https://www.bertnase.de/npiet/npiet-execute.php">https://www.bertnase.de/npiet/npiet-execute.php</a></p><p>一直上传图片不成功，缺少验证码–原来要翻墙才能看到验证码</p><p><img src="https://wx4.sinaimg.cn/mw690/007juUiNly1gpkimj1mm9j30s40pt0tl.jpg" alt="img"></p><p>得到Tetris密钥</p><p>又是outguess隐写</p><p>得到一串编码</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">100000001001</span></span><br><span class="line"><span class="number">11010101110</span></span><br><span class="line"><span class="number">10000001101</span></span><br><span class="line"><span class="number">100000001010</span></span><br><span class="line"><span class="number">110101010</span></span><br><span class="line"><span class="number">1101010110111</span></span><br><span class="line"><span class="number">100000001000</span></span><br><span class="line"><span class="number">110101010</span></span><br><span class="line"><span class="number">0001</span></span><br><span class="line"><span class="number">0100</span></span><br><span class="line"><span class="number">11011</span></span><br><span class="line"><span class="number">11010100110</span></span><br><span class="line"><span class="number">110101000</span></span><br><span class="line"><span class="number">11011</span></span><br><span class="line"><span class="number">11010100110</span></span><br><span class="line"><span class="number">11010101111</span></span><br><span class="line"><span class="number">1100100</span></span><br><span class="line"><span class="number">101101</span></span><br><span class="line"><span class="number">101101</span></span><br><span class="line"><span class="number">1001</span></span><br><span class="line"><span class="number">101110</span></span><br><span class="line"><span class="number">11010100110</span></span><br><span class="line"><span class="number">100000001001</span></span><br><span class="line"><span class="number">0100</span></span><br><span class="line"><span class="number">101111</span></span><br><span class="line"><span class="number">11010110</span></span><br><span class="line"><span class="number">001</span></span><br><span class="line"><span class="number">0101</span></span><br><span class="line"><span class="number">11011</span></span><br><span class="line"><span class="number">11010100110</span></span><br><span class="line"><span class="number">11011</span></span><br><span class="line"><span class="number">001</span></span><br><span class="line"><span class="number">101111</span></span><br><span class="line"><span class="number">0000</span></span><br><span class="line"><span class="number">001</span></span><br><span class="line"><span class="number">1010</span></span><br><span class="line"><span class="number">11010100110</span></span><br><span class="line"><span class="number">1000000111</span></span><br><span class="line"><span class="number">1000000111</span></span><br><span class="line"><span class="number">110101011000</span></span><br></pre></td></tr></table></figure><p>哈夫曼编码，文档还有文字，再根据字频来进行哈夫曼编码</p><p>看来别人的博客有个哈夫曼脚本</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line">#Huffman Encoding</span><br><span class="line">#Tree-Node Type</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import random</span><br><span class="line">class Node:</span><br><span class="line">    def __init__(self,freq):</span><br><span class="line">        self.<span class="keyword">left</span> = None</span><br><span class="line">        self.<span class="keyword">right</span> = None</span><br><span class="line">        self.father = None</span><br><span class="line">        self.freq = freq</span><br><span class="line">    def isLeft(self):</span><br><span class="line">        <span class="keyword">return</span> self.father.<span class="keyword">left</span> == self</span><br><span class="line">#create nodes创建叶子节点</span><br><span class="line">def createNodes(freqs):</span><br><span class="line">    <span class="keyword">return</span> [Node(freq) <span class="keyword">for</span> freq in freqs]</span><br><span class="line"></span><br><span class="line">#create Huffman-Tree创建Huffman树</span><br><span class="line">def createHuffmanTree(nodes):</span><br><span class="line">    queue = nodes[:]</span><br><span class="line">    <span class="keyword">print</span>(queue) #一个个node的地址</span><br><span class="line">    #每次对queue进行排序，</span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(queue) &gt; <span class="number">1</span>:</span><br><span class="line">        queue.<span class="keyword">sort</span>(key=lambda item:item.freq) #reverse = false</span><br><span class="line">        node_left = queue.<span class="keyword">pop</span>(<span class="number">0</span>)</span><br><span class="line">        node_right = queue.<span class="keyword">pop</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        node_father = Node(node_left.freq + node_right.freq)</span><br><span class="line"></span><br><span class="line">        node_father.<span class="keyword">left</span> = node_left</span><br><span class="line">        node_father.<span class="keyword">right</span> = node_right</span><br><span class="line">        node_left.father = node_father</span><br><span class="line">        node_right.father = node_father</span><br><span class="line">        queue.<span class="keyword">append</span>(node_father)</span><br><span class="line">    queue[<span class="number">0</span>].father = None</span><br><span class="line">    <span class="keyword">return</span> queue[<span class="number">0</span>]</span><br><span class="line">#Huffman编码</span><br><span class="line">def huffmanEncoding(nodes,root):</span><br><span class="line">    codes = [<span class="string">&#x27;&#x27;</span>] * <span class="built_in">len</span>(nodes)</span><br><span class="line">    <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="built_in">len</span>(nodes)):</span><br><span class="line">        node_tmp = nodes[i]</span><br><span class="line">        <span class="keyword">while</span> node_tmp != roo<span class="variable">t:</span></span><br><span class="line">            <span class="keyword">if</span> node_tmp.isLeft():</span><br><span class="line">                codes[i] = <span class="string">&#x27;0&#x27;</span> + codes[i]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                codes[i] = <span class="string">&#x27;1&#x27;</span> + codes[i]</span><br><span class="line">            node_tmp = node_tmp.father</span><br><span class="line">    <span class="keyword">return</span> codes</span><br><span class="line">def freq_count(strr):</span><br><span class="line">    chars = []</span><br><span class="line">    chars_fre = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="built_in">len</span>(strr)):</span><br><span class="line">        <span class="keyword">if</span> strr[i] in char<span class="variable">s:</span></span><br><span class="line">            pass</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            chars.<span class="keyword">append</span>(strr[i])</span><br><span class="line">            char_fre = (strr[i], strr.<span class="built_in">count</span>(strr[i]))</span><br><span class="line">            # <span class="keyword">print</span>(chars_fre)</span><br><span class="line">            chars_fre.<span class="keyword">append</span>(char_fre)</span><br><span class="line">    <span class="keyword">return</span> chars_fre</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def encoder_huffman(strr,chars_fre,codes):</span><br><span class="line">    huffmans=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> word in strr:</span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        #用于与code【i】还有item 的符号一一对应</span><br><span class="line">        <span class="keyword">for</span> item in chars_fre:</span><br><span class="line">            <span class="keyword">if</span> word == item[<span class="number">0</span>]:</span><br><span class="line">                huffmans += codes[i]</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">print</span>(huffmans)</span><br><span class="line">    <span class="keyword">return</span> huffmans</span><br><span class="line"></span><br><span class="line">def decode_huffman(huffmans,codes,chars_fre):</span><br><span class="line">    original_code=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> huffmans!=<span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        i=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> item in code<span class="variable">s:</span></span><br><span class="line">            <span class="keyword">if</span> item in huffman<span class="variable">s:</span></span><br><span class="line">                <span class="keyword">if</span> huffmans.<span class="built_in">index</span>(item) ==<span class="number">0</span>:</span><br><span class="line">                    original_code += chars_fre[i][<span class="number">0</span>]</span><br><span class="line">                    huffmans=huffmans[<span class="built_in">len</span>(item):]</span><br><span class="line">            i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> original_code</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    #chars = [<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;E&#x27;</span>,<span class="string">&#x27;F&#x27;</span>,<span class="string">&#x27;G&#x27;</span>,<span class="string">&#x27;H&#x27;</span>,<span class="string">&#x27;I&#x27;</span>,<span class="string">&#x27;J&#x27;</span>,<span class="string">&#x27;K&#x27;</span>,<span class="string">&#x27;L&#x27;</span>,<span class="string">&#x27;M&#x27;</span>,<span class="string">&#x27;N&#x27;</span>]</span><br><span class="line">    #freqs = [<span class="number">10</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">6</span>]</span><br><span class="line"></span><br><span class="line">    #元组的列表，item【<span class="number">1</span>】就是后面<span class="number">2</span>，<span class="number">2</span>，<span class="number">3</span>，<span class="number">4</span>，等，生成器然后是作为列表保存，传入createnodes中</span><br><span class="line">   # <span class="string">&#x27;&#x27;</span><span class="string">&#x27;&#x27;</span><span class="string">&#x27;&#x27;</span>chars_freqs = [(<span class="string">&#x27;C&#x27;</span>, <span class="number">2</span>), (<span class="string">&#x27;G&#x27;</span>, <span class="number">2</span>), (<span class="string">&#x27;E&#x27;</span>, <span class="number">3</span>), (<span class="string">&#x27;K&#x27;</span>, <span class="number">3</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="number">4</span>),</span><br><span class="line">   #                 (<span class="string">&#x27;F&#x27;</span>, <span class="number">4</span>), (<span class="string">&#x27;I&#x27;</span>, <span class="number">4</span>), (<span class="string">&#x27;J&#x27;</span>, <span class="number">4</span>), (<span class="string">&#x27;D&#x27;</span>, <span class="number">5</span>), (<span class="string">&#x27;H&#x27;</span>, <span class="number">6</span>),</span><br><span class="line">   #                 (<span class="string">&#x27;N&#x27;</span>, <span class="number">6</span>), (<span class="string">&#x27;L&#x27;</span>, <span class="number">7</span>), (<span class="string">&#x27;M&#x27;</span>, <span class="number">9</span>), (<span class="string">&#x27;A&#x27;</span>, <span class="number">10</span>)]</span><br><span class="line">   # <span class="string">&#x27;&#x27;</span><span class="string">&#x27;&#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    #sttttt =<span class="built_in">input</span>(<span class="string">&#x27;input your text&#x27;</span>)</span><br><span class="line">    #sttttt=<span class="built_in">input</span>(<span class="string">&#x27;input your text&#x27;</span>)</span><br><span class="line">    sttttt=<span class="string">&quot;&quot;</span></span><br><span class="line">    sttttt = <span class="keyword">open</span>(<span class="string">&#x27;docx复制粘贴出来的文本&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).<span class="keyword">read</span>()</span><br><span class="line">    # <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    #     sttttt += str(<span class="keyword">int</span>(random.randint(<span class="number">27</span>, <span class="number">70</span>)))</span><br><span class="line">    #     sttttt += random.choice(<span class="string">&#x27;abcdefghijklmnopqrstuvwxyz!@#$%^&amp;*()&#x27;</span>)</span><br><span class="line">    # sttttt=random.sample(</span><br><span class="line">    #     [<span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;e&#x27;</span>,</span><br><span class="line">    #      <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a&#x27;</span>],<span class="number">20</span>)</span><br><span class="line">   # <span class="keyword">print</span>(sttttt)</span><br><span class="line">    # <span class="keyword">print</span>(<span class="string">&#x27;编译前输入的文本：    &#x27;</span>+sttttt)</span><br><span class="line">    #chars_freqs=freq_count(sttttt)</span><br><span class="line"></span><br><span class="line">    #c=<span class="built_in">input</span>(<span class="string">&#x27;input your word and freq, splitted with ,&#x27;</span>)</span><br><span class="line">    #splitt = <span class="keyword">c</span>.<span class="keyword">split</span>(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    #print(splitt)</span><br><span class="line">    chars_freqs =[]</span><br><span class="line">    chars_freqs = freq_count(sttttt)</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">&#x27;文本中字符的统计如下：\n&#x27;</span>+str(chars_freqs))</span><br><span class="line">    # <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(sttttt),<span class="number">2</span>):</span><br><span class="line">    #     chars_freq=   (sttttt[i], sttttt[i+<span class="number">1</span>])</span><br><span class="line">    #     <span class="keyword">if</span> sttttt[i] in [item[<span class="number">0</span>] <span class="keyword">for</span> item in chars_freqs]:</span><br><span class="line">    #         <span class="keyword">print</span>(<span class="string">&#x27;can not be  a huffman code, there is some word repeating in this sentence, the huffman code will be without:&#x27;</span>,sttttt[i],sttttt[i+<span class="number">1</span>])</span><br><span class="line">    #         <span class="keyword">continue</span></span><br><span class="line">    #     chars_freqs.<span class="keyword">append</span>(chars_freq)</span><br><span class="line">    # <span class="keyword">print</span>(chars_freqs)</span><br><span class="line">    nodes = createNodes([item[<span class="number">1</span>] <span class="keyword">for</span> item in chars_freqs])</span><br><span class="line">    #print([item[<span class="number">1</span>] <span class="keyword">for</span> item in chars_freqs])</span><br><span class="line">    root = createHuffmanTree(nodes)</span><br><span class="line">    codes = huffmanEncoding(nodes,root)</span><br><span class="line">    <span class="keyword">res</span> = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> item in zip(chars_freqs,codes):</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">&#x27;Character:%s freq:%-2d   encoding: %s&#x27;</span> % (item[<span class="number">0</span>][<span class="number">0</span>],item[<span class="number">0</span>][<span class="number">1</span>],item[<span class="number">1</span>]))</span><br><span class="line">        <span class="keyword">res</span>.<span class="keyword">update</span>(&#123;item[<span class="number">1</span>]:item[<span class="number">0</span>][<span class="number">0</span>]&#125;)</span><br><span class="line">    # huffman_code=encoder_huffman(sttttt,chars_freqs,codes)</span><br><span class="line">    # <span class="keyword">print</span>(<span class="string">&#x27;转换之后的huffman编码  &#x27;</span>+huffman_code)</span><br><span class="line">    # <span class="keyword">print</span>(<span class="string">&#x27;解码之后的原来的文本：  &#x27;</span>+decode_huffman(huffman_code,codes,chars_freqs))</span><br><span class="line">    <span class="keyword">print</span>(<span class="keyword">res</span>)</span><br><span class="line">    d2 = <span class="keyword">open</span>(<span class="string">&#x27;你outguess提取出来的编码&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).readlines()</span><br><span class="line">    re = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i in d2:</span><br><span class="line">        re+=<span class="keyword">res</span>[i[:-<span class="number">1</span>]]</span><br><span class="line">    #     re += <span class="keyword">res</span>[i]</span><br><span class="line">    <span class="keyword">print</span>(re)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>就可以得到flag了。</p><p>参考<a href="http://www.fzwjscj.xyz/index.php/archives/41/">http://www.fzwjscj.xyz/index.php/archives/41/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;签到&quot;&gt;&lt;a href=&quot;#签到&quot; class=&quot;headerlink&quot; title=&quot;签到&quot;&gt;&lt;/a&gt;签到&lt;/h3&gt;&lt;p&gt;异世相遇！尽享美味！安恒赛高！&lt;/p&gt;
&lt;p&gt;喊了也不给，还得取关它&lt;/p&gt;
&lt;h3 id=&quot;简单的png隐写&quot;&gt;&lt;a href=&quot;#简单的</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>upload-2</title>
    <link href="http://example.com/2021/03/24/upload-3/"/>
    <id>http://example.com/2021/03/24/upload-3/</id>
    <published>2021-03-24T14:59:08.000Z</published>
    <updated>2021-05-24T15:44:04.119Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Pass-19-绕过"><a href="#Pass-19-绕过" class="headerlink" title="Pass-19 /.绕过"></a>Pass-19 /.绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_ext</span> = pathinfo(<span class="variable">$file_name</span>,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array(<span class="variable">$file_ext</span>,<span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123; </span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;禁止保存为该类型文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>就是要利用这个黑名单来完成绕过了。查了其他的writeup后，发现move_uploaded_file()还有这么一个特性，会忽略掉文件末尾的/.。而代码中的file_name是用户可控的，这就给了我们可以利用的地方，上传一个图片马，将保存名字改为upload-19.php/.。</p><p><img src="http://m.qpic.cn/psc?/V53QcDQN3M0Z4223G6is1vw7KQ0WDRYf/ruAMsa53pVQWN7FLK88i5s2gmieZ0un5vQHgehzviZ2kTyCKXoFJaNjsAegkpBWTbhzSMcKyYzHA3yYVIVVx2VvaP*PORznFJIQ9hOJDNB8!/mnull&bo=1gEcAAAAAAADB.k!&rf=photolist&t=5" alt="img"></p><p>访问地址</p><h3 id="Upload-labs-Pass-20-数组-绕过"><a href="#Upload-labs-Pass-20-数组-绕过" class="headerlink" title="Upload-labs Pass-20 数组+/.绕过"></a>Upload-labs Pass-20 数组+/.绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">//检查MIME</span></span><br><span class="line">    <span class="variable">$allow_type</span> = <span class="keyword">array</span>(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!in_array(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],<span class="variable">$allow_type</span>))&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该类型文件!&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//检查文件名</span></span><br><span class="line">        <span class="variable">$file</span> = <span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>]) ? <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] : <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (!is_array(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="variable">$file</span> = explode(<span class="string">&#x27;.&#x27;</span>, strtolower(<span class="variable">$file</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$ext</span> = end(<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$allow_suffix</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$ext</span>, <span class="variable">$allow_suffix</span>)) &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$file_name</span> = reset(<span class="variable">$file</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$file</span>[count(<span class="variable">$file</span>) - <span class="number">1</span>];</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;请选择要上传的文件！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>20关和上面一样</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Pass-19-绕过&quot;&gt;&lt;a href=&quot;#Pass-19-绕过&quot; class=&quot;headerlink&quot; title=&quot;Pass-19 /.绕过&quot;&gt;&lt;/a&gt;Pass-19 /.绕过&lt;/h3&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>upload-2</title>
    <link href="http://example.com/2021/03/24/upload-2/"/>
    <id>http://example.com/2021/03/24/upload-2/</id>
    <published>2021-03-24T14:59:08.000Z</published>
    <updated>2021-05-24T15:44:16.716Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Pass-11-00截断"><a href="#Pass-11-00截断" class="headerlink" title="Pass-11 %00截断"></a>Pass-11 %00截断</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接传<code>php</code>得到提示，又是白名单了</p><p>改文件后缀名和<code>URL</code>中的路径,url中，可以直接采用%00截断</p><h3 id="Pass-12-0x00截断"><a href="#Pass-12-0x00截断" class="headerlink" title="Pass-12 0x00截断"></a>Pass-12 0x00截断</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;<span class="comment">//换成了POST</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这题和上一题基本一样，只是save_path不在URL中了，而在POST数据里面，由于POST里面的数据不会被url自动解码</p><p><img src="https://img-blog.csdnimg.cn/2019110411345913.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9iYXluay5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>我的不知道为什么是乱的，用下别人的</p><p>2b改为00就可以了</p><h3 id="Pass-13-图片马绕过-unpack"><a href="#Pass-13-图片马绕过-unpack" class="headerlink" title="Pass-13 图片马绕过-unpack"></a>Pass-13 图片马绕过-unpack</h3><p>图片马可以用以下命令直接在CMD中制作，copy 2.jpg/b + shell.php/a shell.jpg</p><p>其他gif,png也是一样的</p><p>shell命令为：<?php echo "It's OK!"; ?>只要上传成功后，被作者提供的包含漏洞包含后能够输出OK即可。</p><p><img src="http://m.qpic.cn/psc?/V53QcDQN3M0Z4223G6is1vw7KQ0WDRYf/45NBuzDIW489QBoVep5mcasJTVqUNQC70QhblhyONKRWuKFtn0ZB8DXlxXA9QfAH1r2eSC5Q0CNzdcsqx2Y*hEL.oYz674CoY2lCEY.ZQ.M!/b&bo=vwJ3AQAAAAADF*k!&rf=viewer_4" alt="img"></p><p><img src="http://m.qpic.cn/psc?/V53QcDQN3M0Z4223G6is1vw7KQ0WDRYf/45NBuzDIW489QBoVep5mcasJTVqUNQC70QhblhyONKQTCsqyUoa03*kQEzYLHH88hcXYGMJv2SQA1A0mq5aF4kzzhYzoCWLi3m8Fwe3wcW8!/b&bo=bAZFAgAAAAADFx8!&rf=viewer_4" alt="img"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$file</span> = fopen(<span class="variable">$filename</span>, <span class="string">&quot;rb&quot;</span>);<span class="comment">//以二进制数据形式进行读取</span></span><br><span class="line">    <span class="variable">$bin</span> = fread(<span class="variable">$file</span>, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    fclose(<span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$strInfo</span> = @unpack(<span class="string">&quot;C2chars&quot;</span>, <span class="variable">$bin</span>);    <span class="comment">//将2字节拆成两个字符，用数组的形式的体现出来</span></span><br><span class="line">    <span class="variable">$typeCode</span> = intval(<span class="variable">$strInfo</span>[<span class="string">&#x27;chars1&#x27;</span>].<span class="variable">$strInfo</span>[<span class="string">&#x27;chars2&#x27;</span>]);    <span class="comment">//将字符转成整数并且进行拼接</span></span><br><span class="line">    <span class="variable">$fileType</span> = <span class="string">&#x27;&#x27;</span>;    </span><br><span class="line">    <span class="keyword">switch</span>(<span class="variable">$typeCode</span>)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;jpg&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;png&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;gif&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;unknown&#x27;</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$fileType</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_type</span> = getReailFileType(<span class="variable">$temp_file</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file_type</span> == <span class="string">&#x27;unknown&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_type</span>;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Pass-14-图片马绕过-getimagesize"><a href="#Pass-14-图片马绕过-getimagesize" class="headerlink" title="Pass-14 图片马绕过-getimagesize"></a>Pass-14 图片马绕过-getimagesize</h3><p>和上面差不多</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Pass-11-00截断&quot;&gt;&lt;a href=&quot;#Pass-11-00截断&quot; class=&quot;headerlink&quot; title=&quot;Pass-11 %00截断&quot;&gt;&lt;/a&gt;Pass-11 %00截断&lt;/h3&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>upload-1</title>
    <link href="http://example.com/2021/03/24/upload-1/"/>
    <id>http://example.com/2021/03/24/upload-1/</id>
    <published>2021-03-24T14:24:18.000Z</published>
    <updated>2021-05-24T15:44:25.413Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Upload-labs-Pass-01-前端JS限制"><a href="#Upload-labs-Pass-01-前端JS限制" class="headerlink" title="Upload-labs Pass-01 前端JS限制"></a>Upload-labs Pass-01 前端JS限制</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = document.getElementsByName(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        alert(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.substring(file.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.indexOf(ext_name) == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>getElementsByName</strong>()方法可返回带有指定名称的对象的集合，由于是数组(所有名称叫做upload_file的文件)，[0]代表取数组中的第一个元素。<br><strong>lastIndexOf</strong>()是从右向左查某个指定的字符串在字符串中最后一次出现的位置。<br><strong>substring</strong>()方法用于提取字符串中介于两个指定下标之间的字符。这里就写了一个数字，即最后一个.后面的字符，即后缀名。<br>用burpsuite更改前端JS,png改为php</p><h3 id="Pass-02-MIME检测-Content-Type"><a href="#Pass-02-MIME检测-Content-Type" class="headerlink" title="Pass-02 MIME检测-Content-Type"></a>Pass-02 MIME检测-Content-Type</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH.<span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接用burpsuite改</p><p>只允许上传image/jpeg、image/png、image/gif三种图片类型，这里要注意大小写</p><h3 id="Pass-03-黑名单限制"><a href="#Pass-03-黑名单限制" class="headerlink" title="Pass-03 黑名单限制"></a>Pass-03 黑名单限制</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);<span class="comment">//删除文件名</span></span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);<span class="comment">//</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                 <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>禁止上传.asp|.aspx|.php|.jsp后缀文件</p><p>直接上传.phtml</p><h3 id="Pass-04-htaccess文件上传"><a href="#Pass-04-htaccess文件上传" class="headerlink" title="Pass-04 .htaccess文件上传"></a>Pass-04 .htaccess文件上传</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>test.php.xxxx.yyy这种不认识的后缀名会从右往左依次解析，不认识就往左移一个，像这个就会当作test.php处理</p><h3 id="Pass-05-大小写绕过"><a href="#Pass-05-大小写绕过" class="headerlink" title="Pass-05 大小写绕过"></a>Pass-05 大小写绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接用大小写绕过就好了,Php</p><h3 id="Pass-06-空格绕过"><a href="#Pass-06-空格绕过" class="headerlink" title="Pass-06 空格绕过"></a>Pass-06 空格绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>缺少了$file_ext = trim($file_ext); //首尾去空这行码，导致可以空格绕过</p><h3 id="Pass-07-绕过"><a href="#Pass-07-绕过" class="headerlink" title="Pass-07 .绕过"></a>Pass-07 <code>.</code>绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line"><span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"><span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line"><span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line"><span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line"><span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure><p>只是换了一行代码，把去掉首尾空的代码加上，把去掉结果的.代码去掉了，所以传入后缀为.php.</p><h3 id="Pass-08-Windows文件流特性绕过"><a href="#Pass-08-Windows文件流特性绕过" class="headerlink" title="Pass-08 Windows文件流特性绕过"></a>Pass-08 Windows文件流特性绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line"><span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"><span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line"><span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line"><span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line"><span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>少了这么一行$file_ext = str_ireplace(‘::$DATA’, ‘’, $file_ext);//去除字符串::$DATA</p><p>改为<code>.php::$data</code>可以直接绕过检查</p><h3 id="Pass-09-双写后缀特殊符号绕过"><a href="#Pass-09-双写后缀特殊符号绕过" class="headerlink" title="Pass-09 双写后缀特殊符号绕过"></a>Pass-09 双写后缀特殊符号绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line"><span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);<span class="comment">//去掉名字前面的空格，仍然还是&quot;info.php. .&quot;</span></span><br><span class="line"><span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点，变成了&quot;info.php. &quot;</span></span><br><span class="line"><span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);<span class="comment">//取后缀，此时后缀为&quot; &quot;</span></span><br><span class="line"><span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写，后缀不变</span></span><br><span class="line"><span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA，后缀不变</span></span><br><span class="line"><span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空，但是现在本来就是空格，后缀仍然不变</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;<span class="comment">//路径就变成了&quot;upload/info.php. &quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>后缀名为info.php. .，这样构造就可以成功绕过了</p><h3 id="Pass-10-双写后缀名绕过"><a href="#Pass-10-双写后缀名绕过" class="headerlink" title="Pass-10 双写后缀名绕过"></a>Pass-10 双写后缀名绕过</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = str_ireplace(<span class="variable">$deny_ext</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$file_name</span>);</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;        </span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>典型双写绕过的例子</p><p>pphphp</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Upload-labs-Pass-01-前端JS限制&quot;&gt;&lt;a href=&quot;#Upload-labs-Pass-01-前端JS限制&quot; class=&quot;headerlink&quot; title=&quot;Upload-labs Pass-01 前端JS限制&quot;&gt;&lt;/a&gt;Upload-l</summary>
      
    
    
    
    
  </entry>
  
</feed>
